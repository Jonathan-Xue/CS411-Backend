Subject,Number,Course Title,Year,Term,Primary Instructor,A+,A,A-,B+,B,B-,C+,C,C-,D+,D,D-,F,W,averageGPA,studentCount,courseDesc
CS,100,Freshman Orientation,2010,Fall,"Pitt, Leonard B",0,154,0,0,30,0,0,22,0,0,9,0,9,1,3.388,225,Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.
CS,100,Freshman Orientation,2011,Fall,"Pitt, Leonard B",0,182,0,0,11,0,0,12,0,0,5,0,7,0,3.641,217,Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.
CS,100,Freshman Orientation,2012,Fall,"Pitt, Leonard B",0,188,0,0,21,0,0,6,0,0,1,0,9,2,3.68,227,Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.
CS,100,Freshman Orientation,2013,Fall,"Pitt, Leonard B",0,222,0,5,16,0,5,4,0,2,1,0,9,1,3.697,265,Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.
CS,100,Freshman Orientation,2014,Fall,"Pitt, Leonard B",0,232,11,3,11,3,2,6,1,0,2,1,9,1,3.702,282,Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.
CS,100,Freshman Orientation,2015,Fall,"Pitt, Leonard B",0,234,0,9,11,4,0,10,0,0,2,2,4,0,3.7430000000000003,276,Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.
CS,100,Freshman Orientation,2016,Fall,"Pitt, Leonard B",0,279,0,5,11,0,1,6,0,0,3,0,6,1,3.804,312,Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.
CS,100,Freshman Orientation,2017,Fall,"Pitt, Leonard B",0,258,5,12,12,4,3,3,2,0,0,1,4,0,3.7960000000000003,304,Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.
CS,100,Freshman Orientation,2018,Fall,"Gunter, Elsa",0,290,10,9,4,2,1,2,2,0,1,0,1,0,3.897,322,Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.
CS,101,Intro Computing: Engrg & Sci,2010,Fall,"Gambill, Thomas N",49,74,68,67,56,46,39,25,16,9,6,8,2,3,3.111,468,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2010,Spring,"Bhasin, Rajesh",9,13,11,18,6,9,2,6,1,3,0,0,0,0,3.239,78,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2010,Spring,"Fister, Andrew E",8,16,20,12,6,4,3,3,0,1,1,0,3,1,3.29,78,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2010,Spring,"Gupta, Piyush",15,11,23,9,6,6,1,1,4,1,0,0,2,0,3.3510000000000004,79,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2010,Spring,"Huang, Zu C",13,15,11,6,4,9,8,2,2,2,2,1,1,1,3.154,77,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2010,Spring,"Shifteh Far, Saeidreza",13,12,9,6,11,7,0,5,4,3,2,0,3,1,3.032,76,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2010,Spring,"Su, Lu",8,11,9,14,7,9,3,3,2,2,0,0,2,1,3.138,71,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2011,Fall,"Gambill, Thomas N",115,80,49,47,41,45,26,20,14,8,7,6,4,2,3.258,464,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2011,Spring,"Gambill, Thomas N",106,103,78,52,42,33,19,12,9,4,4,8,4,0,3.391,474,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2012,Fall,"Gambill, Thomas N",86,61,56,40,52,41,36,30,14,10,4,4,15,3,3.072,452,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2013,Fall,"Gambill, Thomas N",82,64,56,51,53,53,34,33,28,23,13,11,17,3,2.9010000000000002,521,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2013,Spring,"Gambill, Thomas N",104,85,71,67,44,45,38,24,22,14,5,4,8,5,3.185,536,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2014,Fall,"Gambill, Thomas N",79,51,64,66,78,66,57,48,39,35,20,13,50,5,2.634,671,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2014,Spring,"Gambill, Thomas N",113,74,59,56,42,37,33,29,21,18,8,8,23,2,3.0389999999999997,523,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2015,Fall,"Cunningham, Ryan M",7,213,76,83,142,35,23,53,12,0,26,0,24,3,3.113,697,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2015,Spring,"Gambill, Thomas N",116,83,83,68,73,66,48,43,16,20,19,7,35,4,2.95,681,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2016,Fall,"Davis, Neal E",93,154,124,67,72,36,39,26,11,10,15,14,21,2,3.1919999999999997,684,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2016,Spring,"Cunningham, Ryan M",6,341,78,65,96,14,13,33,11,0,15,0,16,5,3.41,693,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2017,Fall,"Davis, Neal E",439,90,43,30,19,16,5,9,6,1,9,0,14,1,3.705,682,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2017,Spring,"Davis, Neal E",239,159,72,61,44,24,9,12,9,7,2,4,15,3,3.5460000000000003,660,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2018,Fall,"Davis, Neal E",263,162,72,59,40,16,12,11,5,8,7,6,11,0,3.576,672,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2018,Spring,"Davis, Neal E",360,128,67,37,25,14,16,12,12,2,5,3,8,1,3.6639999999999997,690,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,101,Intro Computing: Engrg & Sci,2019,Spring,"Davis, Neal E",320,158,75,42,22,20,12,7,11,2,8,7,10,1,3.634,695,"Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. "
CS,105,Intro Computing: Non-Tech,2010,Fall,"Gambill, Thomas N",45,169,102,71,119,81,70,110,19,5,11,7,8,5,3.032,822,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2010,Spring,"Bhagath, Aditya",1,11,1,1,5,3,1,1,0,1,1,1,0,0,3.161,27,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2010,Spring,"Charalambides, Minas",9,11,11,7,13,6,7,3,6,2,2,0,0,0,3.0610000000000004,77,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2010,Spring,"Chen, Yi-Shuan",8,20,15,9,6,3,5,5,4,1,3,1,1,0,3.165,81,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2010,Spring,"Date, Chaitanya P",5,11,12,10,11,4,6,0,3,1,0,1,0,0,3.219,64,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2010,Spring,"Hsiao, Christopher R",3,20,11,10,6,4,5,6,6,4,0,0,1,0,3.07,76,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2010,Spring,"Mitchell, Damion R",4,16,9,8,6,0,7,1,6,2,1,1,1,0,3.07,62,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2010,Spring,"Saharan, Ankit",8,15,11,10,10,3,1,3,2,2,0,1,1,0,3.264,67,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2010,Spring,"Ved, Ankeeth S",6,15,8,13,10,6,6,5,4,2,1,1,0,1,3.0860000000000003,78,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2010,Spring,"Yuttanan, Boonrod",1,2,5,3,5,1,7,4,4,1,0,0,1,1,2.657,35,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2010,Spring,"Zutshi, Aditya",2,9,11,15,11,6,8,3,7,2,3,1,3,0,2.79,81,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2011,Fall,"Gambill, Thomas N",129,147,106,96,124,70,40,48,18,15,22,7,10,5,3.17,837,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2011,Spring,"Lauterburg, Steven T",30,86,66,53,88,45,40,47,17,5,18,3,14,4,2.947,516,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2012,Fall,"Zhao, Kai",52,193,170,144,122,62,45,34,15,9,4,1,2,3,3.3169999999999997,856,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2013,Fall,"Zhao, Kai",67,145,136,103,138,62,33,0,49,11,9,4,11,2,3.196,770,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2013,Spring,"Zhao, Kai",59,181,86,84,80,34,27,21,5,7,4,0,5,2,3.3939999999999997,595,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2014,Fall,"Fagen, Wade A",77,169,135,106,133,67,36,45,22,13,17,2,14,2,3.178,838,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2014,Spring,"Fagen, Wade A",35,82,62,70,59,35,32,23,8,7,5,5,6,2,3.148,431,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2015,Fall,"Fagen, Wade A",268,237,111,87,81,36,22,12,9,8,4,1,9,3,3.573,888,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2015,Spring,"Fagen, Wade A",60,101,61,40,52,41,25,24,10,6,2,1,8,0,3.2489999999999997,431,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2016,Fall,"Hellwig, Martin",125,191,109,87,76,25,15,8,6,4,2,1,11,1,3.511,661,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2016,Spring,"Hellwig, Martin",161,135,86,49,34,15,11,3,4,1,1,0,8,2,3.633,510,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2017,Fall,"Harris, Albert F",40,157,204,0,100,0,0,15,0,0,4,0,8,1,3.543,529,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2017,Spring,"Haberman, Michael",184,130,64,42,41,21,11,14,1,5,9,1,21,3,3.4589999999999996,547,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2018,Fall,"Harris, Albert F",124,95,66,56,46,31,25,24,12,0,14,0,7,7,3.332,507,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2018,Spring,"Harris, Albert F",43,134,115,60,45,50,19,16,20,0,18,0,13,1,3.238,534,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,105,Intro Computing: Non-Tech,2019,Spring,"Harris, Albert F",216,189,39,35,48,13,7,16,2,1,12,4,2,1,3.64,585,"Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. "
CS,125,Intro to Computer Science,2010,Fall,"Angrave, Lawrence C",73,66,59,33,4,10,11,9,14,1,1,8,9,3,3.342,301,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2010,Spring,"Fogla, Navin",1,6,5,0,0,2,1,2,3,0,0,2,2,0,2.682,24,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2010,Spring,"Nagaraja, Sharat",6,16,9,11,2,7,8,4,2,1,0,0,0,1,3.237,67,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2010,Spring,"Somnath, Nisha",5,5,4,1,2,2,1,1,3,2,0,1,1,0,2.929,28,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2011,Fall,"Angrave, Lawrence C",70,79,73,33,16,13,11,13,12,0,7,0,22,1,3.253,350,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2011,Spring,"Angrave, Lawrence C",27,41,31,26,4,16,8,9,10,0,8,0,9,4,3.113,193,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2012,Fall,"Angrave, Lawrence C",36,63,81,41,37,20,19,25,22,0,11,0,20,3,3.03,378,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2013,Fall,"Zilles, Craig",28,131,35,35,68,20,14,27,11,0,13,11,13,3,3.113,409,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2013,Spring,"Angrave, Lawrence C",47,88,50,36,23,16,14,28,10,0,10,1,16,3,3.16,342,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2014,Fall,"Chapman, William L",137,129,29,21,33,10,6,17,2,0,0,1,8,6,3.608,399,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2014,Spring,"Angrave, Lawrence C",60,109,38,53,28,19,15,15,16,0,10,0,13,7,3.267,383,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2015,Fall,"Chapman, William L",152,170,42,44,49,15,34,41,4,6,1,1,12,5,3.4210000000000003,576,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2015,Spring,"Chapman, William L",122,152,65,47,63,17,29,39,12,8,3,5,7,3,3.353,572,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2016,Fall,"Chapman, William L",103,178,78,34,63,49,36,27,9,3,1,3,3,2,3.4130000000000003,589,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2016,Spring,"Chapman, William L",108,184,59,42,70,13,37,26,7,3,4,1,9,5,3.424,568,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2017,Fall,"Angrave, Lawrence C",19,264,77,68,45,43,68,35,24,0,24,0,17,5,3.1919999999999997,689,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2017,Spring,"Chapman, William L",77,141,61,30,68,40,36,36,29,6,4,1,3,4,3.24,536,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2018,Fall,"Challen, Geoffrey W",143,389,53,34,32,19,8,7,8,0,14,0,20,8,3.635,735,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2018,Spring,"Challen, Geoffrey W",56,169,40,43,33,19,16,10,8,0,9,0,10,2,3.437,415,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,125,Intro to Computer Science,2019,Spring,"Challen, Geoffrey W",55,223,39,20,32,13,4,9,2,0,18,0,21,2,3.443,438,Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. 
CS,126,Software Design Studio,2016,Fall,"Zilles, Craig",4,23,0,3,1,1,1,0,1,0,0,0,0,0,3.755,34,"Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. "
CS,126,Software Design Studio,2017,Fall,"Zilles, Craig",22,23,18,10,18,3,6,5,2,0,1,0,3,2,3.3310000000000004,113,"Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. "
CS,126,Software Design Studio,2017,Spring,"Angrave, Lawrence C",36,47,58,47,20,20,10,6,6,3,0,1,7,0,3.313,261,"Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. "
CS,126,Software Design Studio,2018,Fall,"Evans, Graham C",6,51,23,9,8,4,2,0,0,0,0,0,7,0,3.47,110,"Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. "
CS,126,Software Design Studio,2018,Spring,"Evans, Graham C",54,92,42,34,13,8,4,1,0,0,0,0,14,1,3.523,263,"Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. "
CS,126,Software Design Studio,2019,Spring,"Evans, Graham C",17,116,81,44,23,9,2,4,4,0,0,0,13,2,3.477,315,"Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. "
CS,173,Discrete Structures,2010,Fall,"Fleck, Margaret M",5,9,23,16,13,18,17,8,19,11,7,12,7,5,2.411,170,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2010,Spring,"Cook, Lucas T",7,5,4,7,2,3,2,5,6,4,3,0,1,2,2.714,51,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2010,Spring,"Fanek, Samer R",4,3,1,6,4,7,8,7,7,1,0,1,3,1,2.474,53,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2010,Spring,"Li, Chen",0,8,5,3,5,4,6,8,5,3,3,2,0,1,2.552,53,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2010,Spring,"Pittman, Lance C",3,0,3,2,4,4,4,4,0,2,2,0,0,1,2.655,29,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2011,Fall,"Fleck, Margaret M",14,25,16,29,22,17,14,17,15,8,9,7,4,1,2.734,198,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2011,Spring,"Fleck, Margaret M",12,30,21,37,28,18,30,26,20,15,16,4,30,0,2.419,287,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2012,Fall,"Fleck, Margaret M",20,46,34,42,51,32,33,31,21,18,13,7,8,1,2.76,357,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2012,Spring,"Pittman, Lance C",1,0,8,5,2,8,4,0,1,0,0,1,0,0,2.968,30,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2013,Fall,"Fleck, Margaret M",18,40,29,43,40,32,26,29,25,8,8,6,13,3,2.745,320,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2013,Fall,"Parthasarathy, Madhusudan",1,6,1,3,6,1,4,1,5,1,1,0,0,0,2.8110000000000004,30,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2013,Spring,"Fleck, Margaret M",19,57,51,48,58,37,31,30,14,11,10,8,9,4,2.897,387,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2014,Fall,"Fleck, Margaret M",19,73,61,58,71,34,28,24,11,21,13,10,12,3,2.915,438,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2014,Fall,"Parthasarathy, Madhusudan",0,7,4,4,7,2,1,1,0,2,1,0,0,0,3.115,29,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2014,Spring,"Fleck, Margaret M",36,42,54,48,75,40,30,34,15,12,9,8,14,1,2.866,418,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2015,Fall,"Fleck, Margaret M",41,86,88,63,73,53,36,26,16,11,11,5,3,1,3.111,513,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2015,Spring,"Fleck, Margaret M",17,103,103,89,80,34,31,22,15,14,10,4,6,2,3.14,530,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2016,Fall,"Fleck, Margaret M",21,79,81,66,71,59,33,38,12,14,9,7,5,7,3.016,502,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2016,Spring,"Fleck, Margaret M",37,112,59,83,74,35,27,19,8,5,25,3,14,3,3.0980000000000003,504,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2017,Fall,"Fleck, Margaret M",23,91,81,80,73,57,32,37,13,4,12,9,10,4,3.035,526,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2017,Spring,"Fleck, Margaret M",39,135,82,74,76,38,33,45,15,9,9,5,6,2,3.161,568,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2018,Fall,"Evans, Graham C",11,42,29,17,24,20,12,6,6,3,5,1,5,1,3.094,182,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2018,Fall,"Warnow, Tandy",45,38,13,20,22,13,11,7,4,4,4,4,4,0,3.2030000000000003,189,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2018,Spring,"Fleck, Margaret M",26,83,57,50,51,35,28,18,7,9,9,3,3,3,3.1510000000000002,382,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2018,Spring,"Meseguer, Jose",21,18,17,7,11,10,8,11,12,5,3,4,3,1,2.88,131,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2019,Spring,"Fleck, Margaret M",13,73,59,78,45,45,25,26,7,9,9,5,7,1,3.0469999999999997,402,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,173,Discrete Structures,2019,Spring,"Varodayan, David",11,30,33,18,25,14,21,17,6,3,4,5,5,0,2.926,192,"Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  "
CS,196,Freshman Honors,2010,Fall,"Angrave, Lawrence C",31,10,4,0,0,0,0,0,0,0,0,0,5,2,3.574,52,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2010,Fall,"Kumar, Viraj",6,2,1,5,0,2,3,2,1,0,4,0,1,1,2.753,28,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2010,Spring,"Gambill, Thomas N",0,47,0,0,0,0,0,0,0,0,0,0,1,1,3.917,49,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2011,Fall,"Angrave, Lawrence C",8,38,10,4,0,0,0,0,0,0,0,0,2,1,3.775,63,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2011,Spring,"Fleck, Margaret M",2,19,9,2,3,0,0,1,0,0,1,0,0,0,3.667,37,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2012,Fall,"Angrave, Lawrence C",9,27,10,3,0,0,0,0,1,0,0,0,2,0,3.699,52,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2013,Fall,"Angrave, Lawrence C",11,58,0,0,2,0,0,0,0,0,0,0,0,0,3.972,71,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2013,Spring,"Angrave, Lawrence C",2,11,18,2,0,0,0,0,0,0,0,0,2,0,3.563,35,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2013,Spring,"Fleck, Margaret M",4,6,5,7,0,1,2,0,0,0,1,0,1,1,3.333,28,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2014,Fall,"Chapman, William L",32,97,14,7,4,4,1,0,0,0,0,0,0,0,3.872,159,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2014,Spring,"Angrave, Lawrence C",13,45,1,1,0,0,0,1,0,0,0,0,1,0,3.887,62,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2014,Spring,"Fleck, Margaret M",16,19,3,1,2,1,1,0,3,0,0,0,0,1,3.7030000000000003,47,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2015,Fall,"Chapman, William L",62,55,9,1,5,2,1,4,0,0,0,0,1,1,3.822,141,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2015,Fall,"Fleck, Margaret M",8,12,5,0,1,0,0,1,0,0,1,0,1,0,3.5980000000000003,29,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2015,Spring,"Chapman, William L",26,68,23,6,5,2,0,0,0,0,0,0,0,2,3.852,132,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2015,Spring,"Fleck, Margaret M",3,12,6,6,3,2,1,0,1,0,0,0,0,1,3.5389999999999997,35,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2016,Fall,"Chapman, William L",25,89,0,2,1,0,0,4,0,0,0,0,0,1,3.915,122,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2016,Fall,"Fleck, Margaret M",2,15,0,0,2,1,0,0,0,0,0,0,1,1,3.6510000000000002,22,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2016,Spring,"Chapman, William L",23,39,11,9,6,0,0,1,0,0,0,0,3,1,3.678,93,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2016,Spring,"Fleck, Margaret M",7,6,6,2,3,0,0,0,1,0,0,0,0,0,3.654,25,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2017,Fall,"Challen, Geoffrey W",7,97,29,14,7,1,3,1,2,0,0,0,2,1,3.7119999999999997,164,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2017,Fall,"Fleck, Margaret M",0,22,7,1,2,0,0,0,0,0,0,0,0,0,3.844,32,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2017,Spring,"Chapman, William L",4,25,11,8,2,2,3,0,0,0,0,0,0,0,3.661,55,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2018,Fall,"Challen, Geoffrey W",6,61,27,11,3,2,1,5,0,0,0,0,0,0,3.71,116,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2018,Spring,"Challen, Geoffrey W",4,19,10,4,1,2,0,0,0,0,0,0,0,0,3.759,40,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2018,Spring,"Fleck, Margaret M",1,12,6,2,1,1,0,1,0,0,0,0,0,1,3.681,25,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2019,Spring,"Challen, Geoffrey W",2,10,4,0,3,0,0,0,0,0,0,1,1,0,3.445,21,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,196,Freshman Honors,2019,Spring,"Fleck, Margaret M",2,23,9,2,1,0,0,0,1,0,0,0,1,0,3.702,39,Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,199,De-Bug your Brain,2017,Fall,"Angrave, Lawrence C",0,22,1,0,0,0,0,0,0,0,0,0,1,1,3.82,25,May be repeated.
CS,199,Elements of Game Design,2016,Winter,"Angrave, Lawrence C",18,4,0,1,0,0,0,0,0,0,0,0,0,0,3.971,23,May be repeated.
CS,199,Elements of Game Design,2017,Winter,"Shaffer, Eric G",0,29,0,0,2,0,0,1,0,0,0,0,3,1,3.543,36,May be repeated.
CS,199,Elements of Game Design,2018,Winter,"Shaffer, Eric G",20,4,2,0,1,0,0,1,0,0,1,0,1,0,3.645,30,May be repeated.
CS,199,Python for Data,2019,Spring,"Davis, Neal E",18,3,4,1,1,0,0,0,0,0,0,0,1,0,3.75,28,May be repeated.
CS,199,Real World Cases Scient Comput,2018,Fall,"Silva, Mariana T",14,33,1,2,1,1,0,0,0,0,0,0,1,0,3.8489999999999998,53,May be repeated.
CS,199,Undergraduate Open Seminar,2010,Fall,"Angrave, Lawrence C",0,20,0,0,1,0,0,1,0,0,1,0,0,0,3.739,23,May be repeated.
CS,199,Undergraduate Open Seminar,2011,Fall,"Angrave, Lawrence C",0,19,0,0,0,0,0,1,0,0,0,0,1,0,3.714,21,May be repeated.
CS,199,Undergraduate Open Seminar,2011,Spring,"Angrave, Lawrence C",0,21,0,0,0,0,0,0,0,0,3,0,0,0,3.625,24,May be repeated.
CS,199,Undergraduate Open Seminar,2012,Fall,"Angrave, Lawrence C",0,22,0,0,3,0,0,1,0,0,0,0,1,0,3.667,27,May be repeated.
CS,199,Undergraduate Open Seminar,2013,Fall,"Zilles, Craig",0,25,3,0,0,0,0,1,0,0,0,0,0,0,3.897,29,May be repeated.
CS,199,Undergraduate Open Seminar,2013,Spring,"Angrave, Lawrence C",0,36,0,0,1,0,0,2,0,0,0,0,4,1,3.512,44,May be repeated.
CS,199,Undergraduate Open Seminar,2014,Spring,"Angrave, Lawrence C",0,26,0,0,2,0,0,2,0,0,0,0,1,0,3.677,31,May be repeated.
CS,199,Undergraduate Open Seminar,2014,Spring,"Heeren, Cinda",0,9,0,0,7,0,0,6,0,0,1,0,1,0,2.917,24,May be repeated.
CS,199,Undergraduate Open Seminar,2015,Fall,"Heeren, Cinda",0,24,0,0,0,0,0,1,0,0,0,0,0,0,3.92,25,May be repeated.
CS,199,Undergraduate Open Seminar,2015,Spring,"Yershova, Ganna",0,18,0,0,8,0,0,0,0,0,0,0,0,0,3.6919999999999997,26,May be repeated.
CS,199,Undergraduate Open Seminar,2016,Fall,"Heeren, Cinda",0,25,5,2,0,0,0,0,0,0,0,0,0,0,3.907,32,May be repeated.
CS,199,Undergraduate Open Seminar,2017,Spring,"Heeren, Cinda",3,20,8,1,0,1,0,0,0,0,0,0,0,0,3.859,33,May be repeated.
CS,210,Ethical & Professional Issues,2010,Fall,"Woodbury, Marsha C",25,59,2,3,2,1,0,2,0,0,0,0,1,1,3.853,96,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2010,Spring,"Loui, Michael C",0,25,17,6,1,0,3,3,0,0,0,0,0,0,3.6069999999999998,55,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2011,Fall,"Woodbury, Marsha C",23,45,9,10,6,0,0,2,0,0,1,0,0,0,3.764,96,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2011,Spring,"Loui, Michael C",0,29,21,2,2,1,1,1,1,0,1,0,0,0,3.6510000000000002,59,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2012,Fall,"Woodbury, Marsha C",28,29,20,5,6,4,0,1,0,0,2,0,1,0,3.653,96,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2013,Spring,"Miller, Keith W",0,46,1,0,31,1,0,8,0,0,2,0,0,0,3.386,89,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2014,Fall,"Kirlik, Alex",12,89,17,18,29,2,2,9,1,0,3,1,1,1,3.515,185,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2014,Spring,"Kirlik, Alex",5,56,21,54,23,2,3,5,1,2,3,6,0,1,3.335,182,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2015,Fall,"Cunningham, Ryan M",3,106,32,10,21,5,1,3,0,0,1,0,2,1,3.654,185,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2015,Spring,"Cunningham, Ryan M",6,111,29,33,42,8,6,17,2,1,1,0,2,0,3.432,258,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2016,Fall,"Cunningham, Ryan M",8,128,17,16,15,4,1,3,0,0,1,0,1,0,3.735,194,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2016,Spring,"Cunningham, Ryan M",3,81,25,18,35,8,8,6,1,0,1,0,3,1,3.425,190,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2017,Fall,"Cunningham, Ryan M",32,90,15,5,12,1,1,4,1,0,1,0,6,0,3.639,168,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2017,Spring,"Cunningham, Ryan M",10,108,20,3,12,2,2,0,1,0,0,0,2,0,3.7689999999999997,160,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2018,Fall,"Cunningham, Ryan M",27,87,16,6,7,0,0,0,0,0,2,0,0,0,3.846,145,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2018,Spring,"Cunningham, Ryan M",49,71,5,5,10,1,0,2,0,0,1,0,1,1,3.812,146,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,210,Ethical & Professional Issues,2019,Spring,"Cunningham, Ryan M",4,76,14,14,14,0,4,2,0,0,1,0,1,0,3.6489999999999996,130,"Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. "
CS,225,Data Structures,2010,Fall,"Heeren, Cinda",4,69,13,17,65,5,5,38,14,0,22,0,12,1,2.7939999999999996,265,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2010,Spring,"Earls, John C",1,12,3,4,16,2,2,9,0,0,5,0,0,0,2.9139999999999997,54,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2010,Spring,"Karahan, Ibrahim",0,10,1,2,9,1,2,12,0,0,5,0,9,0,2.229,51,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2010,Spring,"Kassa, Debessay F",0,5,0,2,7,1,0,6,0,0,0,0,4,0,2.4930000000000003,25,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2010,Spring,"Singh, Varun K",0,5,2,1,2,1,1,5,0,0,5,0,1,0,2.464,23,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2011,Fall,"Heeren, Cinda",3,101,20,19,72,16,21,34,17,0,10,0,12,1,2.9739999999999998,326,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2011,Spring,"Heeren, Cinda",0,72,35,12,49,11,9,14,5,0,18,0,7,2,3.052,234,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2012,Fall,"Heeren, Cinda",3,109,58,23,70,14,13,39,0,0,21,0,21,2,3.003,373,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2012,Spring,"Toole, John D",1,12,6,4,8,2,3,4,5,0,3,0,7,1,2.6,56,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2013,Fall,"Heeren, Cinda",5,165,61,24,61,42,23,30,13,0,21,0,14,3,3.127,462,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2013,Spring,"Heeren, Cinda",15,77,75,22,49,25,17,56,0,0,33,0,22,0,2.8510000000000004,391,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2014,Fall,"Heeren, Cinda",6,145,48,32,76,29,29,37,10,0,50,0,31,13,2.841,506,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2014,Spring,"Heeren, Cinda",5,160,44,56,74,39,32,40,12,0,42,0,24,5,2.937,533,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2015,Fall,"Heeren, Cinda",8,175,84,49,95,32,29,46,15,0,32,0,23,6,3.045,594,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2015,Spring,"Heeren, Cinda",52,145,109,64,47,26,28,23,10,14,10,0,17,4,3.2439999999999998,549,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2016,Fall,"Heeren, Cinda",26,296,87,54,73,25,30,47,0,0,35,0,28,7,3.241,708,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2016,Spring,"Heeren, Cinda",16,210,83,40,76,24,20,42,0,0,30,0,23,5,3.182,569,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2016,Spring,"Yershova, Ganna",0,17,14,5,10,6,1,6,0,0,5,0,7,1,2.8360000000000003,72,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2017,Fall,"Fagen-Ulmschnei, Wade A",235,87,54,46,57,33,28,42,17,24,23,28,30,6,3.054,710,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2017,Spring,"Heeren, Cinda",19,312,55,39,53,27,16,44,0,0,56,0,48,4,3.091,673,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2018,Fall,"Fagen-Ulmschnei, Wade A",25,408,41,45,44,22,28,22,15,6,9,11,21,9,3.417,706,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2018,Spring,"Fagen-Ulmschnei, Wade A",19,312,41,32,43,33,15,24,12,7,13,17,39,0,3.188,607,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,225,Data Structures,2019,Spring,"Zilles, Craig",23,232,34,29,25,15,12,12,11,13,10,5,37,8,3.182,466,"Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. "
CS,231,Computer Architecture I,2010,Fall,"Garzaran, Maria J",8,20,11,7,31,6,1,32,4,0,16,0,5,0,2.65,141,"Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. "
CS,231,Computer Architecture I,2010,Spring,"Kale, Laxmikant V",4,27,5,5,39,8,5,19,7,5,6,1,6,0,2.715,137,"Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. "
CS,231,Computer Architecture I,2011,Fall,"Garzaran, Maria J",6,53,2,7,39,4,8,41,2,0,17,0,4,2,2.8160000000000003,185,"Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. "
CS,231,Computer Architecture I,2011,Spring,"Kale, Laxmikant V",8,28,7,14,39,15,13,25,8,0,8,0,11,0,2.699,176,"Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. "
CS,232,Computer Architecture II,2010,Fall,"Kumar, Viraj",6,23,16,16,30,6,3,7,0,1,0,1,0,1,3.275,110,"Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) "
CS,232,Computer Architecture II,2010,Spring,"Aggarwal, Arushi",7,8,3,1,6,1,1,0,1,0,0,0,0,0,3.536,28,"Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) "
CS,232,Computer Architecture II,2010,Spring,"Cunningham, Ryan M",8,6,3,4,13,2,2,0,0,1,0,0,0,0,3.35,39,"Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) "
CS,232,Computer Architecture II,2010,Spring,"Guzman Rivera, Abner",4,7,3,3,13,4,2,1,2,0,0,0,1,0,3.117,40,"Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) "
CS,232,Computer Architecture II,2010,Spring,"Kumar, Viraj",6,7,3,2,14,0,4,2,0,0,0,0,0,0,3.2889999999999997,38,"Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) "
CS,232,Computer Architecture II,2010,Spring,"Sukumar, Pritam P",8,7,2,3,12,0,3,3,0,0,1,0,0,0,3.265,39,"Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) "
CS,232,Computer Architecture II,2011,Fall,"Zilles, Craig",8,27,7,8,37,4,8,19,3,0,8,0,3,1,2.907,133,"Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) "
CS,232,Computer Architecture II,2011,Spring,"Kumar, Viraj",7,34,26,18,24,12,4,5,4,0,0,0,0,4,3.3539999999999996,138,"Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) "
CS,233,Computer Architecture,2014,Fall,"Zilles, Craig",8,37,15,13,57,13,6,16,4,4,13,0,11,0,2.8169999999999997,197,"Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. "
CS,233,Computer Architecture,2015,Fall,"Zilles, Craig",12,81,12,13,93,9,7,53,9,0,8,5,11,5,2.911,318,"Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. "
CS,233,Computer Architecture,2015,Spring,"Zilles, Craig",12,71,17,13,83,4,12,41,2,4,26,9,19,1,2.7089999999999996,314,"Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. "
CS,233,Computer Architecture,2016,Fall,"Zilles, Craig",13,142,15,14,83,7,6,43,4,2,21,2,22,2,2.997,376,"Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. "
CS,233,Computer Architecture,2016,Spring,"Zilles, Craig",7,64,7,5,35,6,5,24,1,1,10,2,13,1,2.8960000000000004,181,"Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. "
CS,233,Computer Architecture,2017,Fall,"Herman, Geoffrey L",2,144,8,8,63,7,5,38,2,0,14,0,18,2,3.083,311,"Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. "
CS,233,Computer Architecture,2017,Spring,"Herman, Geoffrey L",5,69,4,12,44,0,2,15,1,0,14,0,24,2,2.805,192,"Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. "
CS,233,Computer Architecture,2018,Fall,"Herman, Geoffrey L",13,166,11,12,57,8,4,43,3,1,18,0,13,4,3.176,353,"Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. "
CS,233,Computer Architecture,2018,Spring,"Herman, Geoffrey L",5,94,6,13,49,5,6,13,5,1,6,4,12,3,3.105,222,"Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. "
CS,233,Computer Architecture,2019,Spring,"Herman, Geoffrey L",14,131,12,3,43,3,2,23,1,0,19,0,12,0,3.2030000000000003,263,"Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. "
CS,241,System Programming,2010,Fall,"Caccamo, Marco",10,11,12,13,13,7,5,19,6,0,18,0,13,1,2.415,128,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2010,Spring,"Kravets, Robin H",4,45,3,3,18,7,6,19,9,2,7,5,8,5,2.718,141,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2011,Fall,"Kravets, Robin H",3,18,8,7,21,3,3,20,7,5,3,3,17,0,2.356,118,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2011,Spring,"Kravets, Robin H",3,13,10,8,27,11,4,13,5,8,14,7,12,3,2.302,138,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2012,Fall,"Kravets, Robin H",3,29,6,6,25,6,4,17,5,4,24,3,21,1,2.248,154,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2012,Spring,"Fagen, Wade A",2,3,2,1,4,2,2,4,0,0,3,0,3,0,2.449,26,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2013,Fall,"Fagen, Wade A",3,24,19,14,29,16,17,9,10,0,15,0,16,1,2.5780000000000003,173,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2013,Spring,"Caccamo, Marco",6,18,16,25,30,14,8,17,23,0,8,0,21,2,2.497,188,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2014,Fall,"Angrave, Lawrence C",21,31,38,56,31,33,21,22,28,11,11,11,12,2,2.7230000000000003,328,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2014,Spring,"Caccamo, Marco",7,29,11,14,25,10,9,11,8,6,8,5,7,2,2.722,152,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2015,Fall,"Angrave, Lawrence C",14,17,13,33,16,18,7,14,8,13,7,9,4,2,2.6919999999999997,175,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2015,Spring,"Angrave, Lawrence C",18,19,31,23,23,19,9,9,11,14,5,3,9,1,2.803,194,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2016,Fall,"Angrave, Lawrence C",51,48,29,39,26,19,15,8,7,13,14,8,17,4,2.926,298,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2016,Spring,"Angrave, Lawrence C",33,30,33,32,43,43,35,14,8,21,11,4,21,2,2.707,330,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2017,Fall,"Evans, Graham C",11,24,15,21,7,23,12,12,8,7,8,10,5,3,2.679,166,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2017,Spring,"Evans, Graham C",32,31,37,26,20,34,31,28,19,23,17,13,15,1,2.5810000000000004,327,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2018,Fall,"Angrave, Lawrence C",45,39,26,21,18,10,25,17,10,10,6,0,40,2,2.66,269,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2018,Spring,"Angrave, Lawrence C",33,46,15,27,28,16,17,15,11,7,7,6,19,2,2.818,249,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,241,System Programming,2019,Spring,"Angrave, Lawrence C",56,34,28,17,38,12,17,11,13,5,9,17,9,1,2.9160000000000004,267,"Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. "
CS,242,Programming Studio,2010,Fall,"Woodley, Michael J",6,39,35,27,18,7,0,0,0,0,0,0,0,3,3.569,135,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2010,Spring,"Woodley, Michael J",33,37,16,8,6,1,0,0,0,0,0,0,0,0,3.822,101,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2011,Fall,"Woodley, Michael J",11,53,16,18,10,3,2,1,1,0,1,0,2,0,3.576,118,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2011,Spring,"Woodley, Michael J",3,25,26,14,18,5,1,3,0,0,3,0,0,0,3.395,98,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2012,Fall,"Woodley, Michael J",22,75,17,7,6,1,2,4,0,0,0,0,1,1,3.7560000000000002,136,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2013,Fall,"Woodley, Michael J",9,33,34,27,21,6,7,7,2,1,2,0,1,1,3.325,151,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2013,Spring,"Woodley, Michael J",18,98,16,12,8,4,2,0,1,0,0,0,2,0,3.75,161,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2014,Fall,"Woodley, Michael J",2,19,51,51,14,19,9,7,0,1,2,0,1,2,3.25,178,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2014,Spring,"Woodley, Michael J",33,75,19,18,8,3,3,8,0,4,4,0,1,1,3.557,177,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2015,Fall,"Woodley, Michael J",4,52,60,24,8,3,9,5,1,3,1,1,4,1,3.397,176,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2015,Spring,"Woodley, Michael J",10,38,42,24,14,10,4,8,3,4,1,0,4,0,3.28,162,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2016,Fall,"Woodley, Michael J",4,40,53,32,17,6,11,6,0,1,0,0,1,2,3.41,173,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2016,Spring,"Woodley, Michael J",2,39,48,26,20,10,10,8,0,2,0,0,0,2,3.366,167,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2017,Fall,"Woodley, Michael J",13,54,77,33,9,11,10,8,4,1,4,0,8,2,3.3110000000000004,234,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2017,Spring,"Woodley, Michael J",16,54,34,29,12,13,8,2,3,6,0,3,2,0,3.35,182,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2018,Fall,"Woodley, Michael J",27,49,51,31,15,10,7,6,3,3,0,2,9,0,3.3089999999999997,213,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2018,Spring,"Woodley, Michael J",19,47,39,18,13,9,12,6,3,4,3,3,6,0,3.216,182,Intensive programming lab intended to strengthen skills in programming. 
CS,242,Programming Studio,2019,Spring,"Woodley, Michael J",24,60,20,24,15,7,6,4,3,1,3,0,1,0,3.478,168,Intensive programming lab intended to strengthen skills in programming. 
CS,296,Honors Course,2012,Fall,"Heeren, Cinda",1,22,3,4,0,0,0,0,0,0,0,0,0,0,3.878,30,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2013,Fall,"Heeren, Cinda",0,22,7,0,2,0,0,1,0,0,0,0,0,0,3.803,32,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2013,Spring,"Heeren, Cinda",3,28,7,5,5,3,1,7,0,0,0,0,6,0,3.1639999999999997,65,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2014,Fall,"Angrave, Lawrence C",6,12,0,0,0,0,0,0,0,0,0,0,4,0,3.273,22,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2014,Fall,"Heeren, Cinda",5,25,2,3,4,1,0,0,0,0,0,0,4,0,3.455,44,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2014,Fall,"Zilles, Craig",3,13,0,4,10,1,0,1,2,0,0,0,1,0,3.295,35,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2014,Spring,"Heeren, Cinda",3,57,5,2,5,3,0,0,0,0,0,0,0,2,3.84,77,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2014,Spring,"Zilles, Craig",0,18,0,1,3,3,0,3,0,0,2,0,0,1,3.345,31,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2015,Fall,"Zilles, Craig",7,9,6,1,2,1,0,0,0,0,0,0,0,0,3.77,26,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2015,Spring,"Heeren, Cinda",6,38,3,2,3,1,0,0,0,0,0,0,3,0,3.667,56,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2015,Spring,"Zilles, Craig",2,14,4,1,10,0,0,4,0,0,2,0,1,0,3.2110000000000003,38,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2016,Fall,"Angrave, Lawrence C",5,22,7,3,0,0,0,0,0,0,0,0,0,0,3.883,37,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2016,Fall,"Heeren, Cinda",0,53,0,0,0,0,0,2,0,0,0,0,0,2,3.927,57,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2016,Fall,"Zilles, Craig",2,8,7,1,0,1,2,1,1,1,0,0,1,0,3.2539999999999996,25,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2016,Spring,"Angrave, Lawrence C",3,22,3,2,1,0,0,0,0,0,0,0,0,0,3.8930000000000002,31,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2016,Spring,"Heeren, Cinda",8,25,10,8,3,2,0,0,0,0,0,0,0,0,3.7439999999999998,56,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2017,Fall,"Fagen-Ulmschnei, Wade A",0,92,0,0,0,0,0,8,0,0,0,0,0,1,3.84,101,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2017,Fall,"Zilles, Craig",4,12,0,2,6,0,0,1,0,0,0,0,3,1,3.238,29,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2017,Spring,"Angrave, Lawrence C",7,19,3,4,0,0,0,0,0,0,0,0,0,0,3.889,33,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2017,Spring,"Heeren, Cinda",35,36,2,0,0,0,0,1,0,0,0,0,0,0,3.964,74,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2018,Fall,"Fagen-Ulmschnei, Wade A",0,72,2,0,3,2,0,2,0,0,0,0,1,0,3.825,82,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2018,Spring,"Fagen-Ulmschnei, Wade A",13,13,5,2,1,0,0,1,0,0,0,0,4,4,3.4360000000000004,43,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,296,Honors Course,2019,Spring,"Fagen-Ulmschnei, Wade A",44,44,5,6,0,0,0,1,0,0,0,0,2,0,3.846,102,Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. 
CS,357,Numerical Methods I,2010,Fall,"Hirani, Anil N",8,23,0,14,7,0,5,14,12,0,15,0,6,2,2.5610000000000004,106,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2010,Spring,"Gropp, William D",2,56,25,14,20,12,2,5,3,0,1,2,4,0,3.318,146,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2011,Fall,"Yershova, Ganna",9,37,18,26,25,11,19,7,9,0,2,0,2,0,3.1289999999999996,165,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2011,Spring,"Gambill, Thomas N",14,28,25,31,28,5,15,10,4,2,5,0,1,0,3.1519999999999997,168,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2012,Fall,"Hirani, Anil N",2,30,13,28,18,12,3,12,4,1,6,0,3,0,3.03,132,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2013,Fall,"Semeraro, Bart D",33,28,28,22,30,11,10,11,3,1,4,2,3,0,3.2060000000000004,186,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2013,Spring,"Shaffer, Eric G",2,91,42,7,22,11,4,6,3,0,4,0,3,0,3.4619999999999997,195,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2014,Fall,"Kloeckner, Andreas P",7,61,23,20,30,20,11,19,4,13,7,3,5,3,2.9730000000000003,226,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2014,Spring,"Semeraro, Bart D",5,19,23,26,35,27,19,16,9,8,3,6,2,0,2.793,198,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2015,Fall,"Olson, Luke",0,51,24,32,33,14,17,8,7,6,3,3,0,0,3.108,198,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2015,Spring,"Kloeckner, Andreas P",5,52,13,21,24,7,13,11,10,7,6,3,0,1,3.0389999999999997,173,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2015,Spring,"Shaffer, Eric G",2,41,10,14,25,11,16,24,3,5,3,0,4,0,2.909,158,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2016,Fall,"Kloeckner, Andreas P",12,113,20,18,15,12,9,11,7,11,12,4,9,1,3.14,254,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2016,Spring,"Heath, Michael T",9,16,21,14,33,18,18,24,10,4,8,3,6,1,2.678,185,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2016,Spring,"Shaffer, Eric G",3,9,9,10,17,7,8,7,9,3,2,4,1,0,2.701,89,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2017,Fall,"Olson, Luke",49,86,43,48,55,30,31,36,13,12,11,5,14,1,3.0,434,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2017,Spring,"Kloeckner, Andreas P",59,47,52,35,31,34,32,25,15,8,8,5,12,2,2.9939999999999998,365,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2018,Fall,"Silva, Mariana T",39,100,44,35,50,30,19,27,20,7,8,4,9,0,3.102,392,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2018,Spring,"Silva, Mariana T",29,65,70,50,48,22,32,19,12,9,8,9,7,1,3.055,381,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,357,Numerical Methods I,2019,Spring,"Silva, Mariana T",41,100,45,45,34,17,20,17,7,7,3,5,8,1,3.25,350,"Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. "
CS,361,Prob & Stat for Computer Sci,2016,Fall,"Peng, Jian",12,16,7,14,6,1,4,2,2,0,1,0,1,0,3.373,66,"Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. "
CS,361,Prob & Stat for Computer Sci,2017,Fall,"Barber, Richard C",4,20,5,2,0,0,0,0,1,0,0,0,3,0,3.505,35,"Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. "
CS,361,Prob & Stat for Computer Sci,2017,Spring,"Sinha, Saurabh",8,21,14,3,6,6,1,1,0,0,2,1,1,0,3.412,64,"Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. "
CS,361,Prob & Stat for Computer Sci,2018,Fall,"Varodayan, David",9,20,10,4,7,5,3,2,3,4,4,1,5,1,2.94,78,"Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. "
CS,361,Prob & Stat for Computer Sci,2018,Spring,"Barber, Richard C",10,32,7,4,9,1,0,7,1,1,2,0,6,0,3.196,80,"Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. "
CS,361,Prob & Stat for Computer Sci,2019,Spring,"Varodayan, David",17,40,20,13,20,6,9,7,1,1,2,1,5,0,3.2489999999999997,142,"Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. "
CS,373,Theory of Computation,2010,Fall,"Viswanathan, Mahesh",8,16,21,21,31,21,15,6,6,5,1,0,0,0,3.0239999999999996,151,Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. 
CS,373,Theory of Computation,2010,Spring,"Parthasarathy, Madhusudan",8,18,6,9,15,12,9,14,13,7,4,11,0,1,2.575,127,Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. 
CS,373,Theory of Computation,2011,Fall,"Parthasarathy, Madhusudan",6,17,16,7,16,17,17,21,10,4,2,2,7,0,2.637,142,Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. 
CS,373,Theory of Computation,2011,Spring,"Lavalle, Steven M",5,19,6,10,19,13,7,14,5,0,6,0,1,2,2.873,107,Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. 
CS,373,Theory of Computation,2012,Fall,"Viswanathan, Mahesh",10,64,22,15,11,7,5,9,25,2,0,0,1,1,3.2310000000000003,172,Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. 
CS,373,Theory of Computation,2012,Spring,"Cunningham, Ryan M",11,9,1,3,4,1,1,4,2,0,3,0,0,0,3.205,39,Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. 
CS,373,Theory of Computation,2013,Fall,"Viswanathan, Mahesh",7,51,28,29,23,17,14,11,9,6,0,0,0,0,3.197,195,Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. 
CS,373,Theory of Computation,2013,Spring,"Viswanathan, Mahesh",12,60,19,16,16,18,9,19,10,1,0,0,1,0,3.227,181,Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. 
CS,373,Theory of Computation,2014,Spring,"Meseguer, Jose",5,26,21,7,15,14,14,24,6,4,3,1,3,0,2.842,143,Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. 
CS,374,Intro to Algs & Models of Comp,2016,Fall,"Erickson, Jeff G",14,45,27,31,38,42,53,40,33,38,17,5,14,1,2.504,398,"Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. "
CS,374,Intro to Algs & Models of Comp,2017,Fall,"Har-Peled, Sariel",7,41,33,38,35,50,65,51,33,33,8,6,8,0,2.555,408,"Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. "
CS,374,Intro to Algs & Models of Comp,2017,Spring,"Chekuri, Chandra S",20,51,28,46,67,45,46,32,38,17,7,5,6,0,2.766,408,"Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. "
CS,374,Intro to Algs & Models of Comp,2018,Fall,"Borisov, Nikita",5,16,9,8,4,11,5,10,8,2,0,2,6,1,2.722,87,"Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. "
CS,374,Intro to Algs & Models of Comp,2018,Fall,"Chekuri, Chandra S",16,49,38,37,34,39,42,28,29,26,14,5,8,0,2.693,365,"Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. "
CS,374,Intro to Algs & Models of Comp,2018,Spring,"Erickson, Jeff G",12,31,25,35,27,27,28,25,20,21,11,5,7,1,2.6430000000000002,275,"Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. "
CS,374,Intro to Algs & Models of Comp,2018,Spring,"Viswanathan, Mahesh",5,55,21,27,10,34,6,32,20,38,12,4,0,2,2.668,266,"Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. "
CS,374,Intro to Algs & Models of Comp,2019,Spring,"Al-Hassanieh, Haitham",3,15,9,20,17,23,21,18,9,6,4,4,4,0,2.6060000000000003,153,"Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. "
CS,374,Intro to Algs & Models of Comp,2019,Spring,"Har-Peled, Sariel",9,32,28,24,34,23,41,33,35,20,13,2,10,1,2.536,305,"Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. "
CS,398,Applied Cloud Computing,2018,Spring,"Brunner, Robert J",13,14,13,3,8,4,0,2,0,0,0,0,3,0,3.406,60,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,398,Computer Architecture,2012,Fall,"Zilles, Craig",22,67,23,19,110,13,13,50,3,0,20,0,12,1,2.908,353,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,398,Computer Architecture,2013,Fall,"Garzaran, Maria J",4,42,6,12,64,3,4,35,0,2,12,3,6,3,2.8080000000000003,196,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,398,Computer Architecture,2013,Spring,"Zilles, Craig",9,34,24,5,54,8,6,25,3,0,13,0,16,0,2.752,197,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,398,Computer Architecture,2014,Spring,"Zilles, Craig",9,44,11,8,65,7,5,21,2,2,12,2,11,1,2.843,200,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,398,Deep Learning,2019,Spring,"Sirignano, Justin A",8,30,2,1,0,0,0,1,0,0,0,0,0,0,3.9210000000000003,42,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,398,Introduction to Data Science,2019,Spring,"Stodden, Victoria",10,7,2,5,2,1,1,0,0,0,0,0,1,0,3.551,29,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,410,Text Information Systems,2010,Spring,"Zhai, Chengxiang",14,18,3,0,8,7,0,0,0,0,0,0,0,0,3.634,50,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,410,Text Information Systems,2011,Spring,"Zhai, Chengxiang",10,17,8,0,8,7,0,1,0,0,0,0,1,0,3.5010000000000003,52,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,410,Text Information Systems,2013,Spring,"Zhai, Chengxiang",19,43,10,13,13,6,1,1,0,0,0,0,0,1,3.654,107,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,410,Text Information Systems,2014,Spring,"Zhai, Chengxiang",9,57,7,13,2,2,0,1,0,0,0,0,2,0,3.7239999999999998,93,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,410,Text Information Systems,2015,Spring,"Zhai, Chengxiang",21,102,16,11,10,4,0,0,0,0,0,0,0,1,3.8289999999999997,165,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,410,Text Information Systems,2016,Fall,"Zhai, Chengxiang",36,24,4,2,0,0,0,2,0,0,0,0,1,0,3.846,69,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,410,Text Information Systems,2016,Spring,"Zhai, Chengxiang",17,155,0,2,11,0,1,1,0,0,1,0,0,1,3.8989999999999996,189,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,410,Text Information Systems,2017,Fall,"Zhai, Chengxiang",95,27,6,4,0,0,0,0,0,0,0,0,0,0,3.965,132,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,410,Text Information Systems,2017,Spring,"Zhai, Chengxiang",76,54,32,7,5,1,0,2,1,0,1,1,0,0,3.81,180,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,410,Text Information Systems,2018,Fall,"Zhai, Chengxiang",133,37,16,3,1,1,0,0,0,0,0,0,0,1,3.95,192,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,410,Text Information Systems,2018,Spring,"Zhai, Chengxiang",94,55,23,6,5,4,0,1,0,0,0,0,0,0,3.873,188,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,410,Text Information Systems,2019,Spring,"Zhai, Chengxiang",98,57,29,6,5,1,0,1,0,0,1,0,0,0,3.8739999999999997,198,"Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2010,Fall,"Sinha, Saurabh",14,30,14,11,20,10,10,9,7,0,0,0,0,1,3.23,126,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2010,Spring,"Chang, Kevin C",5,16,10,26,16,6,15,9,2,1,1,1,0,0,3.0610000000000004,108,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2011,Fall,"Zhao, Peixiang",4,34,27,25,23,19,16,7,4,4,1,3,1,0,3.097,168,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2011,Spring,"Chang, Kevin C",8,26,36,21,36,33,7,8,4,1,1,1,2,2,3.1310000000000002,186,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2012,Fall,"Sinha, Saurabh",20,44,22,16,38,18,4,11,6,2,4,2,1,0,3.199,188,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2012,Spring,"Weninger, Timothy E",1,8,11,2,3,1,1,1,0,0,0,0,0,0,3.537,28,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2013,Fall,"Chang, Kevin C",9,26,18,12,32,31,14,20,18,2,1,6,5,1,2.759,195,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2013,Spring,"Cunningham, Ryan M",16,87,12,15,43,0,2,8,0,0,0,0,0,0,3.583,183,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2014,Fall,"Sinha, Saurabh",19,40,21,21,41,24,6,12,7,1,1,0,0,0,3.2230000000000003,193,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2014,Spring,"Cunningham, Ryan M",15,82,27,11,46,8,3,2,0,0,1,0,0,0,3.5639999999999996,195,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2015,Fall,"Sinha, Saurabh",31,65,31,12,30,17,2,3,1,0,0,0,2,0,3.533,194,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2015,Spring,"Chang, Kevin C",17,20,50,25,27,26,7,8,9,4,1,1,2,0,3.145,197,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2016,Fall,"Chang, Kevin C",16,23,48,17,30,26,6,6,13,5,4,5,7,0,2.9610000000000003,206,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2016,Spring,"Parameswaran, Aditya G",6,28,62,56,25,13,0,0,0,0,0,0,0,0,3.472,190,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2017,Fall,"Chang, Kevin C",7,19,15,14,19,20,10,6,7,5,3,6,11,0,2.653,142,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2017,Spring,"Parameswaran, Aditya G",13,21,66,63,22,7,0,0,0,0,0,0,0,0,3.5039999999999996,192,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2018,Fall,"Alawini, Abdussalam A",63,25,43,26,21,5,3,2,3,3,1,0,0,2,3.5580000000000003,197,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2018,Spring,"Chang, Kevin C",2,6,8,4,7,6,2,2,1,1,0,0,5,1,2.804,45,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2018,Spring,"Parameswaran, Aditya G",8,31,85,57,31,9,0,1,0,0,0,0,0,1,3.4989999999999997,223,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2019,Spring,"Alawini, Abdussalam A",66,94,42,29,13,6,2,0,1,1,1,1,0,2,3.7310000000000003,258,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,411,Database Systems,2019,Spring,"Chang, Kevin C",2,17,10,6,14,15,6,3,1,1,1,1,1,0,3.069,78,"Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,412,Introduction to Data Mining,2010,Fall,"Han, Jiawei",10,20,20,12,15,8,1,2,1,0,0,0,5,2,3.2739999999999996,96,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2011,Fall,"Han, Jiawei",12,43,31,13,6,6,3,4,0,0,0,0,2,0,3.551,120,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2012,Fall,"Han, Jiawei",12,45,41,21,14,7,10,2,1,0,1,0,4,2,3.412,160,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2013,Fall,"Han, Jiawei",19,58,44,32,26,30,7,5,3,0,0,0,7,2,3.3139999999999996,233,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2014,Fall,"Chang, Kevin C",15,30,43,14,18,16,7,6,11,2,1,1,10,2,3.0580000000000003,176,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2015,Fall,"Chang, Kevin C",10,23,36,16,19,25,7,9,18,4,6,2,9,1,2.8160000000000003,185,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2016,Fall,"Han, Jiawei",23,34,31,24,30,19,12,10,4,0,2,0,4,3,3.208,196,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2016,Spring,"Sundaram, Hari",5,26,17,4,8,9,1,2,5,0,2,0,2,2,3.264,83,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2017,Fall,"Han, Jiawei",13,29,22,24,39,23,4,9,4,1,2,1,8,0,3.045,179,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2017,Spring,"Han, Jiawei",3,16,21,5,6,0,0,2,0,0,0,0,1,1,3.55,55,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2017,Spring,"Sundaram, Hari",29,55,26,9,6,5,6,2,0,0,0,0,1,0,3.674,139,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2018,Fall,"Li, Qi",18,54,34,12,18,9,8,5,2,0,0,0,0,0,3.517,160,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2018,Spring,"Han, Jiawei",9,32,18,10,9,5,2,1,0,0,3,0,5,0,3.3339999999999996,94,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2018,Spring,"Sundaram, Hari",16,37,23,11,23,16,16,9,0,0,1,0,1,0,3.275,153,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2019,Spring,"Han, Jiawei",42,63,40,15,9,4,0,1,0,0,3,0,6,3,3.603,186,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2019,Spring,"Li, Qi",12,17,11,18,9,12,16,5,0,0,4,0,2,0,3.0810000000000004,106,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,412,Introduction to Data Mining,2019,Spring,"Sinha, Saurabh",4,8,3,8,5,3,0,1,4,3,0,0,2,0,2.9589999999999996,41,"Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. "
CS,414,Multimedia Systems,2010,Spring,"Nahrstedt, Klara",3,7,3,3,5,3,1,4,0,0,1,0,0,0,3.178,30,"Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. "
CS,414,Multimedia Systems,2011,Spring,"Nahrstedt, Klara",3,11,4,2,6,3,1,3,1,0,2,0,0,0,3.2039999999999997,36,"Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. "
CS,414,Multimedia Systems,2014,Spring,"Nahrstedt, Klara",0,11,6,2,12,3,1,3,1,0,0,0,0,0,3.248,39,"Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. "
CS,418,Interactive Computer Graphics,2010,Fall,"Hart, John C",9,13,8,3,7,6,1,0,0,0,1,1,0,0,3.4360000000000004,49,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2010,Spring,"Hart, John C",9,15,7,9,1,4,0,1,1,0,0,0,0,0,3.596,47,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2011,Fall,"Hart, John C",2,17,9,4,4,8,1,3,0,0,2,0,0,0,3.321,50,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2011,Spring,"Hart, John C",5,17,11,2,14,0,4,0,0,0,1,0,1,0,3.406,55,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2012,Fall,"Hart, John C",7,17,8,5,11,11,4,7,0,0,0,0,2,0,3.162,72,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2013,Fall,"Hart, John C",0,33,5,4,32,3,2,5,1,0,2,0,0,0,3.287,87,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2013,Spring,"Hart, John C",5,68,1,25,21,8,5,5,0,2,6,0,1,0,3.358,147,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2014,Fall,"Shaffer, Eric G",0,69,23,13,6,9,4,2,0,0,7,0,3,0,3.427,136,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2014,Spring,"Hart, John C",10,72,23,37,4,12,7,7,1,0,0,0,5,1,3.4360000000000004,179,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2015,Fall,"Shaffer, Eric G",10,47,26,21,22,11,6,7,6,0,3,0,6,2,3.21,167,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2015,Spring,"Hart, John C",12,32,48,31,16,10,3,5,3,1,2,2,5,1,3.275,171,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2016,Fall,"Shaffer, Eric G",6,28,25,22,24,19,8,9,4,0,11,0,6,2,2.951,164,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2016,Spring,"Hart, John C",18,52,51,13,13,9,4,3,2,1,0,0,1,3,3.554,170,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2017,Fall,"Shaffer, Eric G",9,54,13,14,16,8,11,5,3,0,6,0,4,0,3.233,143,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2017,Spring,"Shaffer, Eric G",14,25,23,13,22,19,5,17,3,0,14,0,8,2,2.853,165,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2018,Fall,"Hart, John C",25,25,17,8,6,8,2,3,1,0,0,0,4,0,3.4419999999999997,99,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2018,Spring,"Shaffer, Eric G",12,25,14,7,15,10,3,20,0,0,12,0,2,1,2.945,121,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,418,Interactive Computer Graphics,2019,Spring,"Shaffer, Eric G",6,17,9,6,7,5,3,3,3,0,3,0,6,1,2.946,69,"Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. "
CS,419,Production Computer Graphics,2010,Fall,"Forsyth, David A",2,5,5,5,4,0,2,0,0,0,1,0,1,0,3.2260000000000004,25,"Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,419,Production Computer Graphics,2016,Spring,"Shaffer, Eric G",4,13,8,6,3,2,0,2,0,0,1,0,0,0,3.505,39,"Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,419,Production Computer Graphics,2017,Spring,"Shaffer, Eric G",5,5,1,5,0,1,1,2,0,0,0,0,3,0,3.014,23,"Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,419,Production Computer Graphics,2018,Fall,"Shaffer, Eric G",5,15,7,2,1,0,1,0,0,0,0,0,0,0,3.7960000000000003,31,"Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,420,Parallel Progrmg: Sci & Engrg,2010,Fall,"Padua, David A",9,3,4,6,5,1,5,2,0,0,0,0,0,1,3.3139999999999996,36,"Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. "
CS,420,Parallel Progrmg: Sci & Engrg,2011,Fall,"Padua, David A",4,7,3,7,5,4,1,0,0,0,0,0,0,0,3.43,31,"Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. "
CS,420,Parallel Progrmg: Sci & Engrg,2012,Fall,"Padua, David A",3,12,1,2,5,0,0,5,1,0,0,1,0,0,3.2560000000000002,30,"Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. "
CS,420,Parallel Progrmg: Sci & Engrg,2013,Fall,"Kale, Laxmikant V",4,18,8,9,11,4,3,1,3,0,2,1,0,0,3.245,64,"Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. "
CS,420,Parallel Progrmg: Sci & Engrg,2014,Fall,"Kale, Laxmikant V",4,18,8,11,6,4,1,2,0,0,0,0,0,0,3.5,54,"Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. "
CS,420,Parallel Progrmg: Sci & Engrg,2015,Fall,"Kale, Laxmikant V",4,16,11,6,7,7,2,1,0,0,0,0,0,0,3.457,54,"Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. "
CS,420,Parallel Progrmg: Sci & Engrg,2016,Fall,"Snir, Marc",3,3,5,3,4,9,3,2,2,1,1,0,0,1,2.917,37,"Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. "
CS,420,Parallel Progrmg: Sci & Engrg,2017,Fall,"Snir, Marc",0,8,3,7,9,9,3,1,3,1,1,0,0,0,2.971,45,"Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. "
CS,421,Progrmg Languages & Compilers,2010,Fall,"Gunter, Elsa",9,19,7,13,12,12,2,8,4,1,1,1,2,2,3.07,93,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2010,Spring,"Kamin, Samuel N",19,19,2,6,7,6,9,3,3,0,2,0,4,1,3.1289999999999996,81,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2011,Fall,"Gunter, Elsa",7,24,5,12,19,2,7,7,4,1,2,0,1,0,3.1319999999999997,91,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2011,Spring,"Kamin, Samuel N",4,45,11,3,27,4,5,25,6,2,1,0,3,2,3.0389999999999997,138,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2012,Fall,"Gunter, Elsa",10,14,14,12,15,4,5,8,2,2,2,3,1,1,3.051,93,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2012,Spring,"Griffith, Dennis E",1,4,2,2,1,4,1,2,1,0,0,1,2,0,2.6830000000000003,21,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2013,Fall,"Gunter, Elsa",5,30,15,16,18,8,11,8,3,2,2,1,4,1,3.054,124,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2013,Spring,"Kamin, Samuel N",17,56,8,10,12,7,9,19,2,0,7,0,3,1,3.1910000000000003,151,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2014,Fall,"Gunter, Elsa",6,34,9,8,12,12,4,9,3,1,3,2,0,3,3.162,106,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2014,Spring,"Rosu, Grigore",16,33,23,20,29,11,15,12,8,0,7,2,3,1,3.0389999999999997,180,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2015,Spring,"Agha, Gul A",18,61,22,18,8,16,9,6,1,2,1,2,2,1,3.392,167,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2016,Fall,"Gunter, Elsa",35,37,15,12,28,3,8,16,5,3,3,1,3,3,3.205,172,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2016,Spring,"Beckman, A M",76,71,25,20,24,6,5,13,4,0,1,0,4,0,3.533,249,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2017,Fall,"Gunter, Elsa",12,97,7,5,13,7,4,4,2,2,2,2,0,0,3.5839999999999996,157,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2017,Fall,"Misailovic, Sasa",7,45,3,8,10,2,3,5,2,0,1,3,1,0,3.3810000000000002,90,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2017,Spring,"Beckman, A M",27,136,37,18,20,8,9,9,3,0,12,0,7,1,3.444,287,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2018,Fall,"Misailovic, Sasa",7,56,6,1,3,1,5,1,1,1,2,1,1,0,3.585,86,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2018,Fall,"Parthasarathy, Madhusudan",5,69,4,4,3,5,5,3,2,1,1,3,0,1,3.54,106,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2018,Spring,"Beckman, A M",33,125,28,24,28,12,9,7,3,0,8,0,1,0,3.5210000000000004,278,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,421,Progrmg Languages & Compilers,2019,Spring,"Beckman, A M",55,133,34,23,16,14,12,13,3,0,5,0,2,0,3.557,310,"Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,422,Programming Language Design,2013,Fall,"Rosu, Grigore",8,9,2,0,0,3,0,0,0,0,0,0,0,0,3.7889999999999997,22,Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,423,Operating Systems Design,2010,Fall,"Campbell, R H",3,7,11,5,6,0,0,0,0,0,0,0,0,0,3.594,32,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,423,Operating Systems Design,2010,Spring,"Abdelzaher, Tarek",11,6,5,3,3,3,2,1,0,0,1,0,1,0,3.361,36,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,423,Operating Systems Design,2011,Fall,"Nahrstedt, Klara",5,7,2,5,18,5,3,3,0,0,0,0,0,0,3.174,48,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,423,Operating Systems Design,2011,Spring,"Gunter, Elsa",4,8,2,9,4,0,3,2,1,0,0,0,0,0,3.332,33,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,423,Operating Systems Design,2012,Fall,"Abdelzaher, Tarek",20,30,10,10,11,4,2,0,0,0,0,0,0,0,3.659,87,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,423,Operating Systems Design,2013,Spring,"Nahrstedt, Klara",9,14,2,4,6,0,0,2,0,0,0,0,0,0,3.639,37,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,423,Operating Systems Design,2014,Spring,"Abdelzaher, Tarek",23,28,10,4,2,1,0,0,0,0,1,0,0,0,3.822,69,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,423,Operating Systems Design,2015,Spring,"Abdelzaher, Tarek",21,50,22,15,8,2,1,0,0,0,1,0,0,0,3.728,120,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,423,Operating Systems Design,2016,Spring,"Abdelzaher, Tarek",16,39,13,11,15,6,1,0,2,0,0,2,0,3,3.5460000000000003,108,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,423,Operating Systems Design,2017,Spring,"Bates, Adam M",4,13,12,17,28,17,8,12,5,0,5,0,0,0,2.926,121,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,423,Operating Systems Design,2018,Spring,"Bates, Adam M",9,21,7,5,11,10,1,2,1,0,3,0,0,0,3.3289999999999997,70,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,423,Operating Systems Design,2019,Spring,"Bates, Adam M",5,6,6,2,5,7,5,0,2,0,0,1,3,0,2.905,42,"Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. "
CS,424,Real-Time Systems,2012,Fall,"Sha, Lui R",0,13,4,2,2,0,0,0,0,0,0,0,0,0,3.778,21,Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,424,Real-Time Systems,2013,Fall,"Abdelzaher, Tarek",2,7,9,10,4,2,1,2,0,0,0,0,0,0,3.405,37,Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,424,Real-Time Systems,2014,Fall,"Abdelzaher, Tarek",7,6,11,7,10,4,2,0,0,0,0,0,0,0,3.426,47,Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,424,Real-Time Systems,2016,Fall,"Abdelzaher, Tarek",4,13,10,6,3,3,1,0,0,0,1,0,0,0,3.537,41,Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,424,Real-Time Systems,2017,Fall,"Abdelzaher, Tarek",2,14,8,6,6,0,2,3,1,0,1,0,0,0,3.364,43,Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,424,Real-Time Systems,2018,Fall,"Sha, Lui R",6,18,0,2,1,0,1,1,0,0,0,0,0,0,3.793,29,Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,425,Distributed Systems,2010,Fall,"Gupta, Indranil",2,2,13,8,3,11,0,1,0,0,0,0,0,0,3.2680000000000002,40,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2010,Spring,"Nagaraja, Shishir",2,2,2,4,3,5,5,4,5,0,0,0,2,0,2.559,34,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2011,Fall,"Borisov, Nikita",6,4,5,3,3,5,1,3,4,2,1,4,2,0,2.6060000000000003,43,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2011,Spring,"Vaidya, Nitin H",2,16,5,2,11,3,3,1,0,0,0,0,0,1,3.4189999999999996,44,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2012,Fall,"Gupta, Indranil",7,18,22,18,8,3,0,0,0,0,0,0,0,1,3.588,77,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2012,Spring,"Montanari, Mirko",3,5,8,1,2,3,2,0,0,0,0,0,0,2,3.4730000000000003,26,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2013,Fall,"Gupta, Indranil",11,22,44,18,5,1,0,0,0,0,0,0,0,0,3.674,101,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2013,Spring,"Borisov, Nikita",7,9,17,6,9,4,2,2,2,1,1,0,4,1,3.1,65,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2014,Fall,"Gupta, Indranil",11,28,41,26,27,30,4,0,0,0,0,0,1,3,3.3539999999999996,171,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2014,Spring,"Vaidya, Nitin H",5,17,17,18,17,2,7,4,0,0,2,0,1,0,3.255,90,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2015,Fall,"Gupta, Indranil",20,24,58,61,27,3,2,0,0,0,0,0,1,1,3.498,197,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2015,Spring,"Vaidya, Nitin H",2,26,8,19,22,22,14,11,5,3,0,0,0,0,3.003,132,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2016,Fall,"Gupta, Indranil",17,21,51,45,43,25,2,0,0,0,0,0,2,1,3.347,207,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2016,Spring,"Vaidya, Nitin H",6,35,18,16,47,13,5,14,3,5,0,1,2,1,3.097,166,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2017,Fall,"Gupta, Indranil",20,32,58,52,46,26,3,5,1,0,0,0,9,2,3.2539999999999996,254,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2017,Spring,"Borisov, Nikita",11,25,24,20,20,21,17,10,4,6,4,1,5,2,2.9389999999999996,170,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2018,Fall,"Gupta, Indranil",21,31,107,75,31,7,0,2,1,0,2,0,8,2,3.403,287,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2018,Spring,"Vaidya, Nitin H",5,38,40,49,31,26,19,9,1,0,1,1,1,0,3.213,221,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,425,Distributed Systems,2019,Spring,"Borisov, Nikita",15,33,23,25,26,17,13,6,2,2,2,0,4,0,3.175,168,"Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. "
CS,426,Compiler Construction,2012,Fall,"Adve, Vikram S",3,5,2,0,4,4,0,3,0,0,0,0,1,1,3.092,23,"Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,426,Compiler Construction,2013,Fall,"Adve, Vikram S",3,6,6,3,4,0,0,0,0,0,1,0,2,0,3.24,25,"Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,426,Compiler Construction,2015,Fall,"Adve, Vikram S",2,7,5,3,2,1,0,4,0,0,0,0,0,0,3.375,24,"Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,426,Compiler Construction,2016,Fall,"Adve, Vikram S",0,11,4,7,3,5,2,0,0,0,0,0,0,0,3.406,32,"Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,427,Software Engineering I,2010,Fall,"Johnson, Ralph E",15,27,28,12,7,6,2,1,0,0,2,0,0,1,3.5639999999999996,101,"Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. "
CS,427,Software Engineering I,2011,Fall,"Dig, Daniel",4,45,26,37,15,7,3,3,2,0,0,0,2,0,3.435,144,"Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. "
CS,427,Software Engineering I,2013,Fall,"Marinov, Darko",22,35,36,43,32,8,3,4,2,2,0,0,1,0,3.4130000000000003,188,"Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. "
CS,427,Software Engineering I,2014,Fall,"Xie, Tao",6,39,48,41,26,5,2,0,1,3,0,0,1,3,3.4560000000000004,175,"Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. "
CS,427,Software Engineering I,2015,Fall,"Marinov, Darko",13,46,32,30,17,15,12,5,0,0,0,0,1,0,3.406,171,"Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. "
CS,427,Software Engineering I,2016,Fall,"Rosu, Grigore",9,16,21,16,25,15,17,5,2,1,0,0,1,0,3.123,128,"Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. "
CS,427,Software Engineering I,2017,Fall,"Rosu, Grigore",15,37,15,21,18,7,6,2,1,1,2,0,1,0,3.4019999999999997,126,"Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. "
CS,427,Software Engineering I,2018,Fall,"Xie, Tao",85,43,10,4,1,0,0,1,0,0,0,0,2,0,3.884,146,"Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. "
CS,428,Software Engineering II,2010,Spring,"Marinov, Darko",5,17,12,5,5,4,1,0,0,0,0,0,1,0,3.534,50,"Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. "
CS,428,Software Engineering II,2011,Spring,"Johnson, Ralph E",2,8,7,5,1,1,0,0,0,0,0,0,0,0,3.667,24,"Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. "
CS,428,Software Engineering II,2013,Spring,"Dig, Daniel",0,4,10,1,7,6,0,0,0,0,0,0,0,0,3.323,28,"Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. "
CS,428,Software Engineering II,2014,Spring,"Marinov, Darko",0,3,6,2,8,6,2,0,1,0,0,0,0,0,3.108,28,"Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. "
CS,428,Software Engineering II,2015,Spring,"Xie, Tao",6,10,8,6,5,2,0,0,0,0,0,0,0,0,3.613,37,"Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. "
CS,428,Software Engineering II,2016,Spring,"Xie, Tao",9,11,4,4,3,1,0,0,0,0,0,0,0,0,3.74,32,"Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. "
CS,429,"Software Engineering II, ACP",2010,Spring,"Marinov, Darko",5,17,15,3,13,6,2,2,0,0,0,0,0,1,3.44,64,Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 
CS,429,"Software Engineering II, ACP",2011,Spring,"Johnson, Ralph E",4,20,16,15,10,6,1,0,0,0,0,0,0,0,3.514,72,Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 
CS,429,"Software Engineering II, ACP",2013,Spring,"Dig, Daniel",8,15,27,10,23,17,0,5,2,0,0,0,1,0,3.26,108,Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 
CS,429,"Software Engineering II, ACP",2014,Spring,"Marinov, Darko",13,25,32,20,17,17,3,5,0,0,0,0,0,0,3.405,132,Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 
CS,429,"Software Engineering II, ACP",2015,Spring,"Xie, Tao",16,18,12,20,25,6,4,2,0,0,1,0,0,0,3.384,104,Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 
CS,429,"Software Engineering II, ACP",2016,Spring,"Xie, Tao",10,8,20,18,7,1,1,1,0,0,0,0,0,0,3.535,66,Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 
CS,429,"Software Engineering II, ACP",2017,Spring,"Xie, Tao",2,9,10,5,7,4,3,0,0,0,0,0,0,0,3.4010000000000002,40,Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 
CS,429,"Software Engineering II, ACP",2018,Spring,"Marinov, Darko",3,7,11,10,3,4,0,0,0,0,0,0,0,0,3.509,38,Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 
CS,429,"Software Engineering II, ACP",2019,Spring,"Marinov, Darko",3,8,8,2,0,1,0,0,0,0,0,0,0,0,3.759,22,Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 
CS,431,Embedded Systems,2010,Fall,"Sha, Lui R",4,7,4,15,7,3,0,1,0,0,0,0,1,0,3.325,42,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2010,Spring,"Caccamo, Marco",4,3,4,6,7,7,0,10,0,0,2,0,3,1,2.7030000000000003,47,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2011,Fall,"Caccamo, Marco",3,9,0,6,13,0,0,10,0,0,2,0,0,0,3.0,43,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2011,Spring,"Caccamo, Marco",3,3,4,8,4,6,0,11,0,0,2,0,1,0,2.7939999999999996,42,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2012,Fall,"Caccamo, Marco",6,1,2,7,5,5,0,12,0,0,5,0,0,0,2.698,43,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2013,Fall,"Caccamo, Marco",3,5,4,5,10,1,0,19,0,0,5,0,2,0,2.574,54,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2013,Spring,"Sha, Lui R",8,13,3,10,13,8,2,0,0,0,0,0,0,0,3.392,57,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2014,Fall,"Sha, Lui R",8,13,6,7,4,5,6,4,1,0,2,0,1,0,3.1639999999999997,57,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2014,Spring,"Sha, Lui R",10,19,12,8,4,4,0,1,0,0,0,0,0,0,3.6439999999999997,58,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2015,Fall,"Sha, Lui R",8,20,0,12,19,7,0,9,0,3,2,0,1,0,3.1069999999999998,81,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2015,Spring,"Caccamo, Marco",1,5,6,8,8,11,0,12,0,0,6,0,1,0,2.69,58,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2016,Fall,"Caccamo, Marco",3,9,2,11,16,7,8,7,3,0,5,0,3,0,2.72,74,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2016,Spring,"Sha, Lui R",3,2,0,10,16,3,4,3,3,0,0,0,0,0,2.946,44,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2017,Fall,"Caccamo, Marco",2,6,1,5,11,5,3,3,2,0,3,0,2,1,2.7439999999999998,44,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2017,Spring,"Sha, Lui R",5,7,18,16,5,1,0,1,0,0,0,0,0,0,3.528,53,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2018,Spring,"Sha, Lui R",7,10,7,8,3,0,0,4,0,0,0,0,0,0,3.5210000000000004,39,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,431,Embedded Systems,2019,Spring,"Sha, Lui R",3,8,12,6,5,0,0,2,0,0,0,0,0,0,3.528,36,A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. 
CS,433,Computer System Organization,2010,Fall,"Adve, Sarita V",1,14,4,5,2,0,0,1,1,0,0,1,0,0,3.5060000000000002,29,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2010,Spring,"Adve, Sarita V",1,10,16,12,14,7,5,0,1,0,0,0,0,1,3.283,67,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2011,Fall,"Adve, Sarita V",3,7,4,2,4,2,1,1,0,0,1,0,1,0,3.2310000000000003,26,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2011,Spring,"Adve, Sarita V",0,7,14,18,13,1,1,2,1,2,1,0,0,1,3.2110000000000003,61,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2012,Fall,"Adve, Sarita V",5,6,7,8,5,2,0,2,1,0,0,0,0,0,3.398,36,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2013,Fall,"Torrellas, Josep",3,7,0,1,6,2,0,2,0,0,0,0,1,0,3.2119999999999997,22,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2013,Spring,"Adve, Sarita V",3,14,7,6,6,4,0,1,0,0,0,0,1,0,3.437,42,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2014,Fall,"Torrellas, Josep",4,6,2,3,8,0,1,2,0,0,1,0,0,1,3.284,28,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2014,Spring,"Adve, Sarita V",2,8,3,3,15,2,3,1,0,0,0,0,2,0,3.085,39,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2015,Fall,"Torrellas, Josep",5,9,1,0,7,0,0,2,1,0,0,0,1,0,3.321,26,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2015,Spring,"Garzaran, Maria J",4,6,0,1,3,0,2,4,0,0,0,0,1,0,3.095,21,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2016,Fall,"Adve, Sarita V",5,9,3,2,3,5,0,0,0,0,1,0,0,0,3.465,28,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2016,Spring,"Adve, Sarita V",0,6,5,4,5,2,0,1,1,0,0,0,0,0,3.32,24,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2017,Fall,"Torrellas, Josep",4,6,0,4,4,3,0,2,1,0,0,0,0,0,3.292,24,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2017,Spring,"Adve, Sarita V",5,6,4,5,4,1,1,0,0,0,0,0,0,0,3.551,26,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2018,Fall,"Adve, Sarita V",2,10,8,7,2,2,0,0,0,0,1,0,0,0,3.532,32,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2018,Spring,"Fletcher, Christopher W",3,5,5,3,4,1,0,2,1,0,0,0,0,0,3.362,24,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,433,Computer System Organization,2019,Spring,"Fletcher, Christopher W",2,4,7,3,2,3,1,1,0,0,1,0,0,0,3.293,24,Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. 
CS,438,Communication Networks,2010,Fall,"Lumetta, Steven S",1,10,12,5,8,8,6,2,0,0,0,0,0,1,3.2310000000000003,53,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2010,Spring,"Caesar, Matthew C",5,2,5,2,5,2,2,4,3,0,2,1,4,3,2.532,40,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2011,Spring,"Godfrey, Philip B",2,4,4,6,3,3,0,4,1,1,2,2,3,0,2.572,35,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2012,Fall,"Vaidya, Nitin H",3,14,9,7,5,10,4,7,0,1,0,1,2,0,3.037,63,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2013,Fall,"Vaidya, Nitin H",2,22,7,2,28,4,4,11,2,1,0,1,0,0,3.092,84,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2013,Spring,"Kravets, Robin H",4,13,9,3,13,4,1,7,1,1,5,0,8,0,2.682,69,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2014,Fall,"Roy Choudhury, Romit",8,20,23,11,7,4,3,0,0,0,0,0,0,2,3.575,78,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2014,Spring,"Caesar, Matthew C",6,13,1,5,12,1,2,16,1,0,5,1,7,1,2.557,71,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2015,Fall,"Roy Choudhury, Romit",9,27,21,15,13,0,0,1,1,0,0,0,0,1,3.6060000000000003,88,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2015,Spring,"Kravets, Robin H",2,27,5,3,13,4,4,7,4,3,2,5,15,1,2.483,95,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2016,Fall,"Borisov, Nikita",2,11,9,8,7,12,9,8,4,2,1,0,8,0,2.6180000000000003,81,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2016,Spring,"Kravets, Robin H",3,30,3,5,8,6,2,3,1,2,4,4,12,0,2.667,83,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2017,Fall,"Al-Hassanieh, Haitham",7,20,12,9,23,3,5,2,0,0,0,0,0,0,3.391,81,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2017,Spring,"Kravets, Robin H",2,28,2,4,12,7,3,6,4,1,2,3,9,1,2.727,84,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2018,Fall,"Roy Choudhury, Romit",7,17,35,24,13,11,3,1,0,0,0,0,0,1,3.4389999999999996,112,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2018,Spring,"Kravets, Robin H",0,18,4,2,7,3,2,9,1,1,2,3,12,2,2.375,66,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,438,Communication Networks,2019,Spring,"Kravets, Robin H",1,21,8,1,8,1,3,5,5,0,3,1,6,2,2.8,65,"Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. "
CS,440,Artificial Intelligence,2010,Fall,"Dejong, Gerald F",11,13,2,1,15,4,1,7,0,0,9,0,2,0,2.887,65,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2010,Spring,"Amir, Eyal",6,9,11,3,11,8,0,3,4,0,2,0,3,2,2.99,62,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2011,Fall,"DeJong, Gerald F",7,14,4,6,14,3,2,10,0,0,3,1,1,0,3.031,65,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2011,Spring,"Hockenmaier, Julia C",2,11,12,16,13,12,10,7,1,4,3,0,1,2,2.909,94,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2012,Fall,"Lazebnik, Svetlana",17,29,13,4,17,5,1,10,3,5,5,1,0,1,3.173,111,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2013,Fall,"Lazebnik, Svetlana",21,57,5,9,25,6,0,20,0,1,5,4,2,6,3.228,161,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2013,Spring,"DeJong, Gerald F",3,19,7,4,17,7,7,7,8,1,6,2,0,2,2.83,90,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2014,Fall,"DeJong, Gerald F",0,53,0,0,48,0,0,16,0,0,2,0,0,2,3.2769999999999997,121,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2014,Spring,"DeJong, Gerald F",9,19,10,8,35,8,11,19,6,0,2,1,0,1,2.9530000000000003,129,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2015,Fall,"Lazebnik, Svetlana",30,52,7,5,44,5,2,19,1,3,5,1,4,0,3.2,178,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2015,Spring,"Lazebnik, Svetlana",18,59,7,7,41,0,0,19,2,0,5,1,9,1,3.137,169,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2016,Fall,"Hasegawa-Johnso, Mark A",8,21,0,2,24,1,4,9,0,2,2,1,4,0,2.948,78,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2016,Fall,"Lazebnik, Svetlana",27,52,8,6,55,3,3,22,1,1,4,2,1,0,3.2310000000000003,185,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2016,Spring,"DeJong, Gerald F",11,32,5,0,56,14,0,13,0,0,6,0,3,0,3.055,140,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2017,Fall,"Hasegawa-Johnso, Mark A",31,66,13,12,76,15,8,19,3,1,15,2,1,1,3.141,263,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2017,Fall,"Lazebnik, Svetlana",43,56,6,4,46,1,3,15,0,0,6,1,4,0,3.3280000000000003,185,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2017,Spring,"DeJong, Gerald F",3,52,3,0,54,2,0,49,0,0,3,0,1,0,2.99,167,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2018,Fall,"Fleck, Margaret M",40,53,55,42,29,29,10,7,2,1,2,3,4,0,3.3360000000000003,277,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2018,Spring,"Hasegawa-Johnso, Mark A",57,107,8,14,68,22,8,11,2,3,8,1,1,1,3.391,311,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2019,Spring,"Hasegawa-Johnso, Mark A",5,90,24,25,63,8,6,8,2,0,0,0,0,0,3.4419999999999997,231,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,440,Artificial Intelligence,2019,Spring,"Hockenmaier, Julia C",0,30,5,14,24,2,1,5,1,0,0,1,1,1,3.2969999999999997,85,"Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. "
CS,445,Computational Photography,2015,Fall,"Hoiem, Derek W",9,22,12,9,12,4,3,1,0,1,0,0,2,0,3.4,75,"Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. "
CS,445,Computational Photography,2017,Fall,"Hoiem, Derek W",12,53,9,3,3,4,4,3,0,0,1,0,0,0,3.685,92,"Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. "
CS,446,Machine Learning,2010,Fall,"Roth, Dan",7,11,7,3,3,3,3,0,0,0,0,0,2,1,3.3760000000000003,40,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2011,Fall,"Roth, Dan",8,13,6,6,1,1,0,0,0,0,0,0,1,0,3.657,36,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2012,Fall,"Roth, Dan",5,28,10,17,11,2,1,0,0,0,0,0,3,0,3.4539999999999997,77,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2013,Fall,"Hockenmaier, Julia C",7,26,23,21,12,14,3,4,2,2,3,0,1,3,3.252,121,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2015,Fall,"Roth, Dan",9,29,43,45,15,2,0,0,0,0,2,0,4,0,3.4360000000000004,149,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2015,Spring,"Hockenmaier, Julia C",7,29,9,19,12,16,6,6,0,2,0,1,2,1,3.196,110,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2016,Fall,"Roth, Dan",9,41,25,63,13,11,0,5,0,0,2,0,4,1,3.364,174,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2017,Fall,"Koyejo, Oluwasanmi O",9,30,24,16,19,1,4,1,3,2,0,2,6,1,3.225,118,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2017,Spring,"Roth, Dan",14,22,30,31,34,7,0,2,0,0,2,0,4,1,3.315,147,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2018,Fall,"Koyejo, Oluwasanmi O",19,24,23,24,13,10,6,2,4,1,0,1,5,1,3.248,133,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2018,Spring,"Telgarsky, Matus J",13,67,76,46,41,23,2,0,0,0,3,0,0,1,3.484,272,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2019,Spring,"Schwing, Alexander G",10,44,23,21,27,13,0,1,0,0,1,0,2,2,3.444,144,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,446,Machine Learning,2019,Spring,"Telgarsky, Matus J",4,15,14,13,5,6,0,1,0,0,0,0,1,0,3.452,59,"Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,447,Natural Language Processing,2014,Fall,"Hockenmaier, Julia C",9,5,6,4,4,1,3,2,1,0,0,0,0,0,3.391,35,"Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). "
CS,447,Natural Language Processing,2015,Fall,"Hockenmaier, Julia C",15,18,10,10,6,7,2,1,2,0,0,0,0,1,3.503,72,"Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). "
CS,447,Natural Language Processing,2017,Fall,"Hockenmaier, Julia C",18,30,15,7,4,6,1,1,0,0,0,0,1,0,3.647,83,"Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). "
CS,447,Natural Language Processing,2018,Fall,"Hockenmaier, Julia C",11,18,13,14,11,0,2,2,0,0,3,0,1,0,3.4,75,"Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). "
CS,450,Numerical Analysis,2010,Fall,"Heath, Michael T",7,15,8,15,12,10,5,0,0,0,2,0,0,4,3.293,78,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2010,Spring,"Bond, Stephen",2,14,1,3,3,5,1,1,3,0,1,2,3,1,2.864,40,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2011,Fall,"Hirani, Anil N",2,22,10,8,6,4,4,1,5,0,0,2,1,0,3.216,65,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2011,Spring,"Olson, Luke",1,6,11,6,5,2,1,4,2,0,0,2,0,0,3.093,40,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2012,Fall,"Heath, Michael T",11,20,18,15,18,9,2,3,0,1,0,0,0,1,3.4019999999999997,98,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2013,Fall,"Olson, Luke",0,39,13,16,18,5,6,6,10,5,1,5,6,0,2.908,130,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2013,Spring,"Hirani, Anil N",1,16,4,7,11,1,5,20,3,0,4,0,8,1,2.529,81,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2014,Fall,"Heath, Michael T",7,21,22,23,18,14,8,7,3,1,2,0,2,0,3.138,128,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2014,Spring,"Kloeckner, Andreas P",0,33,11,5,12,7,5,1,2,1,1,1,2,0,3.2560000000000002,81,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2015,Fall,"Fischer, Paul",9,30,18,11,22,6,6,2,2,0,1,0,0,0,3.3930000000000002,107,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2015,Spring,"Fischer, Paul",7,16,19,20,29,14,7,6,6,0,2,0,1,2,3.095,129,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2016,Fall,"Heath, Michael T",4,17,24,15,26,20,16,14,12,1,1,3,2,2,2.859,157,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2016,Spring,"Kloeckner, Andreas P",7,54,10,13,23,5,5,7,1,2,2,0,2,2,3.346,133,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2017,Fall,"Fischer, Paul",2,29,23,24,14,14,10,3,3,1,0,1,1,0,3.2319999999999998,125,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2017,Spring,"Fischer, Paul",3,10,26,28,22,17,14,7,3,0,4,1,1,3,3.003,139,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2018,Fall,"Solomonik, Edgar V",20,35,13,8,6,3,2,5,2,0,0,0,3,2,3.488,99,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2018,Spring,"Solomonik, Edgar V",7,23,14,14,9,11,9,7,4,4,5,2,8,1,2.801,118,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,450,Numerical Analysis,2019,Spring,"Kloeckner, Andreas P",10,45,14,11,15,7,7,10,4,4,2,2,0,0,3.2319999999999998,131,"Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. "
CS,457,Numerical Methods II,2011,Spring,"Gropp, William D",1,8,0,0,2,0,3,2,6,0,0,0,2,0,2.625,24,"Continuation of CS 357. Orthogonalization methods for least squares, Krylov subspace methods, non-linear equations and optimization in multiple dimensions, initial and boundary value problems for ordinary and partial differential equations. No graduate credit. Credit is not given for both CS 457 and CS 450. "
CS,460,Security Laboratory,2010,Spring,"Hinrichs, Susan",0,13,16,1,1,1,0,0,0,1,0,0,0,0,3.668,33,"Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. "
CS,460,Security Laboratory,2011,Spring,"Hinrichs, Susan",0,24,7,3,1,0,0,3,1,0,1,0,1,0,3.4960000000000004,41,"Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. "
CS,460,Security Laboratory,2014,Spring,"Bambenek, John C",1,40,5,9,1,2,0,4,0,0,0,0,3,1,3.5180000000000002,66,"Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. "
CS,460,Security Laboratory,2015,Spring,"Bambenek, John C",0,99,4,6,5,0,1,2,1,0,0,0,1,1,3.812,120,"Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. "
CS,460,Security Laboratory,2016,Spring,"Bambenek, John C",3,45,3,4,3,1,6,5,1,0,1,2,3,0,3.325,77,"Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. "
CS,460,Security Laboratory,2017,Spring,"Bambenek, John C",5,72,3,0,10,0,0,0,1,1,1,0,3,2,3.677,98,"Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. "
CS,460,Security Laboratory,2018,Spring,"Bambenek, John C",5,85,0,3,6,0,0,2,0,1,0,0,3,0,3.7460000000000004,105,"Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. "
CS,460,Security Laboratory,2019,Spring,"Bambenek, John C",22,62,1,0,6,0,0,0,0,0,0,1,3,0,3.772,95,"Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. "
CS,461,Computer Security I,2010,Fall,"Hinrichs, Susan",3,30,0,4,32,0,4,13,0,0,0,0,0,1,3.217,87,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2010,Spring,"Nicol, David M",0,11,13,9,8,10,11,9,0,0,1,0,0,0,3.014,72,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2011,Fall,"Hinrichs, Susan",1,22,7,10,49,0,4,22,0,0,3,0,0,1,3.003,119,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2012,Fall,"Hinrichs, Susan",2,35,1,9,59,0,6,35,0,0,1,0,1,2,2.977,151,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2013,Fall,"Bobba, Rakesh",9,10,18,12,11,16,10,6,2,1,0,0,0,0,3.134,95,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2013,Spring,"Nicol, David M",4,5,16,10,23,5,10,5,2,0,2,0,0,0,3.037,82,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2014,Fall,"Cunningham, Ryan M",10,101,24,8,17,7,6,3,0,0,6,0,2,0,3.556,184,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2014,Spring,"Bobba, Rakesh",8,10,8,9,22,11,7,6,9,0,1,0,1,0,2.946,92,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2015,Fall,"Bailey, Michael D",4,31,10,17,41,7,5,12,8,0,11,0,4,1,2.9,151,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2015,Spring,"Bailey, Michael D",16,24,9,11,22,5,11,13,2,0,10,0,2,1,2.992,126,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2016,Spring,"Bailey, Michael D",6,28,8,6,43,14,7,20,4,2,2,2,5,1,2.862,148,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2017,Fall,"Cunningham, Ryan M",23,39,43,44,34,14,12,0,0,0,2,0,3,0,3.372,214,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2018,Fall,"Bailey, Michael D",2,2,1,2,10,2,2,3,1,0,0,0,0,0,2.96,25,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2018,Fall,"Cunningham, Ryan M",11,44,26,18,22,10,8,2,2,0,0,0,2,3,3.407,148,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2018,Spring,"Bailey, Michael D",5,15,8,15,19,15,6,17,5,0,4,0,2,2,2.853,113,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,461,Computer Security I,2019,Spring,"Bailey, Michael D",5,19,8,7,25,11,4,8,8,2,4,3,1,1,2.861,106,"Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. "
CS,463,Computer Security II,2013,Spring,"Gunter, Carl",0,15,0,0,8,0,0,6,0,0,3,0,1,0,3.0,33,"Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. "
CS,463,Computer Security II,2014,Spring,"Gunter, Carl",0,18,0,0,16,0,0,3,0,0,0,0,0,1,3.405,38,"Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. "
CS,463,Computer Security II,2015,Spring,"Gunter, Carl",0,36,0,0,16,0,0,8,0,0,0,0,0,0,3.467,60,"Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. "
CS,463,Computer Security II,2016,Spring,"Gunter, Carl",0,14,0,0,19,0,0,3,0,0,0,0,0,0,3.306,36,"Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. "
CS,463,Computer Security II,2017,Spring,"Gunter, Carl",0,13,0,0,24,0,0,10,0,0,0,0,0,0,3.0639999999999996,47,"Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. "
CS,463,Computer Security II,2018,Spring,"Gunter, Carl",0,14,0,0,15,0,0,6,0,0,1,0,0,0,3.167,36,"Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. "
CS,463,Computer Security II,2019,Spring,"Gunter, Carl",0,18,0,0,2,0,0,2,0,0,0,0,0,0,3.727,22,"Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. "
CS,465,User Interface Design,2010,Fall,"Bailey, Brian P",0,12,5,6,15,5,0,3,1,0,0,0,0,0,3.241,47,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2011,Fall,"Bailey, Brian P",2,8,2,6,11,9,3,1,1,0,0,0,1,1,3.068,45,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2012,Fall,"Bailey, Brian P",1,10,6,1,12,4,6,8,0,0,1,0,0,0,3.0,49,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2013,Fall,"Fu, Wai-Tat",0,22,29,14,17,6,0,1,0,0,1,0,0,0,3.4560000000000004,90,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2013,Spring,"Fu, Wai-Tat",5,13,13,13,19,6,3,4,0,0,4,0,1,0,3.148,81,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2014,Fall,"Bailey, Brian P",1,26,13,24,62,17,11,20,3,0,0,0,1,0,3.0210000000000004,178,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2015,Fall,"Fu, Wai-Tat",6,24,28,19,56,20,10,16,4,0,2,0,1,0,3.072,186,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2015,Spring,"Fu, Wai-Tat",2,13,24,21,35,22,13,12,5,0,2,0,1,0,2.9760000000000004,150,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2016,Fall,"Bailey, Brian P",3,15,19,24,72,7,14,10,3,0,1,0,0,0,3.065,168,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2016,Spring,"Kirlik, Alex",3,41,49,35,30,8,5,0,1,1,0,0,2,0,3.4189999999999996,175,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2017,Fall,"Bailey, Brian P",1,24,21,9,76,21,7,4,5,2,1,0,1,0,3.0660000000000003,172,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2017,Spring,"Fu, Wai-Tat",1,29,59,31,33,18,4,3,1,0,1,0,0,1,3.36,181,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2018,Fall,"Bailey, Brian P",3,40,32,9,27,7,1,7,0,1,2,0,1,0,3.375,130,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2018,Spring,"Fu, Wai-Tat",15,40,24,21,25,12,5,6,3,0,3,0,2,0,3.312,156,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,465,User Interface Design,2019,Spring,"Kirlik, Alex",3,27,19,6,19,1,5,3,0,0,0,0,0,0,3.458,83,"A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. "
CS,466,Introduction to Bioinformatics,2011,Spring,"Sinha, Saurabh",1,9,2,6,4,2,0,0,0,0,0,0,0,0,3.528,24,"Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. "
CS,466,Introduction to Bioinformatics,2013,Spring,"Sinha, Saurabh",3,9,3,3,8,3,2,2,1,0,1,0,1,0,3.1210000000000004,36,"Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. "
CS,466,Introduction to Bioinformatics,2014,Spring,"Sinha, Saurabh",3,13,9,5,5,6,0,0,0,0,0,0,1,0,3.445,42,"Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. "
CS,466,Introduction to Bioinformatics,2015,Spring,"Sinha, Saurabh",5,13,9,7,10,4,3,3,0,0,0,0,1,0,3.3089999999999997,55,"Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. "
CS,466,Introduction to Bioinformatics,2016,Fall,"Sinha, Saurabh",9,18,14,9,15,4,3,5,1,0,0,0,0,0,3.3810000000000002,78,"Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. "
CS,466,Introduction to Bioinformatics,2016,Spring,"Peng, Jian",2,19,2,10,6,0,0,0,0,0,0,0,0,0,3.657,39,"Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. "
CS,466,Introduction to Bioinformatics,2017,Spring,"Warnow, Tandy",2,6,4,2,1,1,0,1,2,0,1,0,1,0,3.112,21,"Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. "
CS,466,Introduction to Bioinformatics,2018,Fall,"El-Kebir, Mohammed",7,14,7,3,4,1,0,0,0,0,0,0,0,0,3.7319999999999998,36,"Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. "
CS,466,Introduction to Bioinformatics,2018,Spring,"Peng, Jian",4,33,8,9,3,0,0,0,0,0,0,0,0,0,3.795,57,"Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. "
CS,466,Introduction to Bioinformatics,2019,Spring,"Peng, Jian",10,36,8,7,2,0,0,0,0,0,0,0,0,0,3.852,63,"Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. "
CS,467,Social Visualization,2013,Spring,"Karahalios, Kyratso G",13,27,15,4,0,0,0,0,0,0,0,0,2,0,3.7439999999999998,61,"Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,467,Social Visualization,2014,Fall,"Karahalios, Kyratso G",3,34,14,8,6,0,1,0,1,0,0,0,0,0,3.702,67,"Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,467,Social Visualization,2014,Spring,"Karahalios, Kyratso G",11,26,31,10,8,1,0,3,0,0,0,0,1,0,3.602,91,"Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,467,Social Visualization,2016,Spring,"Karahalios, Kyratso G",2,42,16,8,8,3,0,1,0,0,0,0,0,0,3.6919999999999997,80,"Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,467,Social Visualization,2019,Spring,"Karahalios, Kyratso G",10,31,4,4,1,0,0,0,0,0,0,0,0,1,3.9,51,"Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. "
CS,473,Algorithms,2010,Spring,"Erickson, Jeff G",5,8,11,12,11,10,10,16,9,4,4,7,3,1,2.512,111,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Algorithms,2018,Fall,"Har-Peled, Sariel",2,8,9,3,1,6,3,2,3,0,2,0,0,1,3.0780000000000003,40,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Algorithms,2018,Spring,"Mehta, Ruta",1,8,12,4,3,4,2,4,2,0,0,0,1,0,3.147,41,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Fundamental Algorithms,2010,Fall,"Chekuri, Chandra S",4,10,12,15,12,20,12,6,4,0,2,3,0,2,2.9,102,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Fundamental Algorithms,2011,Fall,"Har-Peled, Sariel",0,9,18,17,12,14,15,14,11,5,5,6,1,0,2.591,127,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Fundamental Algorithms,2011,Spring,"Har-Peled, Sariel",1,9,7,13,9,13,13,15,9,6,4,1,3,0,2.511,103,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Fundamental Algorithms,2012,Fall,"Erickson, Jeff G",5,19,12,21,15,17,12,21,10,15,6,9,4,2,2.524,168,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Fundamental Algorithms,2013,Fall,"Erickson, Jeff G",6,24,17,23,20,16,20,23,14,10,8,3,4,2,2.665,190,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Fundamental Algorithms,2013,Spring,"Har-Peled, Sariel",1,5,5,4,10,7,8,8,7,0,2,1,2,1,2.556,61,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Fundamental Algorithms,2013,Spring,"Kolla, Alexandra",2,3,3,6,5,7,9,11,6,3,1,0,0,0,2.5469999999999997,56,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Fundamental Algorithms,2014,Fall,"Kolla, Alexandra",5,6,24,23,37,34,27,17,6,1,1,0,2,2,2.84,185,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Fundamental Algorithms,2014,Spring,"Chekuri, Chandra S",7,25,20,25,19,16,16,21,7,4,1,3,6,0,2.845,170,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,473,Fundamental Algorithms,2015,Spring,"Har-Peled, Sariel",0,3,6,4,10,14,10,9,6,5,4,1,0,0,2.463,72,"Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. "
CS,477,Formal Software Devel Methods,2018,Spring,"Gunter, Elsa",10,9,0,2,1,3,2,2,1,0,1,1,0,0,3.302,32,"Mathematical models, languages, and methods for software specification, development, and verification. "
CS,477,Formal Software Devel Methods,2019,Spring,"Parthasarathy, Madhusudan",6,5,6,3,1,0,0,0,0,0,0,1,1,2,3.464,25,"Mathematical models, languages, and methods for software specification, development, and verification. "
CS,484,Parallel Programming,2014,Spring,"Padua, David A",0,4,1,0,7,0,0,7,0,0,3,0,0,0,2.6210000000000004,22,"Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. "
CS,484,Parallel Programming,2015,Spring,"Kale, Laxmikant V",2,8,2,2,9,3,1,3,2,1,1,0,0,1,3.03,35,"Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. "
CS,484,Parallel Programming,2016,Spring,"Kale, Laxmikant V",5,4,6,1,4,3,3,2,1,1,0,0,0,0,3.178,30,"Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. "
CS,484,Parallel Programming,2017,Fall,"Kale, Laxmikant V",2,11,2,4,8,2,0,5,1,0,1,0,0,0,3.185,36,"Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. "
CS,484,Parallel Programming,2017,Spring,"Kale, Laxmikant V",4,14,5,4,10,3,1,4,2,0,1,0,0,0,3.2569999999999997,48,"Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. "
CS,484,Parallel Programming,2018,Fall,"Kale, Laxmikant V",7,9,5,1,9,5,2,1,2,1,1,0,0,0,3.218,43,"Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. "
CS,484,Parallel Programming,2019,Spring,"Kale, Laxmikant V",5,12,1,6,12,2,3,0,0,0,1,2,0,0,3.235,44,"Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. "
CS,492,Senior Project I,2010,Fall,"Woodley, Michael J",0,16,0,4,25,0,0,0,0,0,0,0,1,1,3.3110000000000004,47,"First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. "
CS,492,Senior Project I,2011,Fall,"Woodley, Michael J",0,20,13,5,6,0,5,0,0,0,0,0,0,0,3.551,49,"First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. "
CS,492,Senior Project I,2012,Fall,"Woodley, Michael J",0,11,16,4,7,0,0,0,0,0,0,0,0,0,3.6060000000000003,38,"First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. "
CS,492,Senior Project I,2013,Fall,"Woodley, Michael J",0,25,30,4,0,0,5,0,0,0,0,0,0,0,3.673,64,"First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. "
CS,492,Senior Project I,2014,Fall,"Woodley, Michael J",24,24,40,6,4,0,0,0,0,0,0,0,0,0,3.783,98,"First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. "
CS,492,Senior Project I,2015,Fall,"Woodley, Michael J",0,8,56,25,22,24,2,0,1,1,0,0,0,0,3.299,139,"First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. "
CS,492,Senior Project I,2016,Fall,"Woodley, Michael J",1,6,11,15,4,4,2,0,1,0,0,0,0,0,3.3480000000000003,44,"First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. "
CS,492,Senior Project I,2017,Spring,"Woodley, Michael J",1,12,6,6,3,0,0,0,0,0,0,0,0,0,3.679,28,"First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. "
CS,492,Senior Project I,2018,Spring,"Woodley, Michael J",6,7,4,0,3,1,0,0,0,0,0,0,0,0,3.7310000000000003,21,"First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. "
CS,493,"Senior Project II, ACP",2010,Spring,"Woodley, Michael J",5,25,2,3,0,0,0,0,0,0,0,0,0,0,3.924,35,Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. 
CS,493,"Senior Project II, ACP",2011,Spring,"Woodley, Michael J",1,17,11,0,11,0,0,0,0,0,0,0,0,0,3.634,40,Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. 
CS,493,"Senior Project II, ACP",2013,Spring,"Woodley, Michael J",0,17,5,5,1,0,0,0,0,0,0,0,1,0,3.655,29,Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. 
CS,493,"Senior Project II, ACP",2014,Spring,"Woodley, Michael J",18,14,18,9,0,0,0,0,0,0,0,0,0,0,3.7969999999999997,59,Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. 
CS,493,"Senior Project II, ACP",2015,Spring,"Woodley, Michael J",4,21,25,13,7,4,0,0,0,0,0,0,0,0,3.6039999999999996,74,Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. 
CS,493,"Senior Project II, ACP",2016,Spring,"Woodley, Michael J",21,38,17,12,5,4,2,0,0,0,0,0,4,0,3.58,103,Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. 
CS,493,"Senior Project II, ACP",2017,Spring,"Woodley, Michael J",0,9,9,3,4,2,1,2,1,1,1,0,0,0,3.233,33,Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. 
CS,494,Senior Project II,2015,Spring,"Woodley, Michael J",2,6,6,4,2,0,1,0,0,0,0,0,0,0,3.603,21,Continuation of CS 492. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. 
CS,494,Senior Project II,2016,Spring,"Woodley, Michael J",6,9,5,2,5,0,2,0,0,0,0,0,0,0,3.609,29,Continuation of CS 492. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. 
CS,498,Algorithms and Models of Comp,2014,Fall,"Erickson, Jeff G",1,12,3,8,8,6,8,5,9,7,3,2,2,0,2.5269999999999997,74,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Algorithms and Models of Comp,2014,Spring,"Pitt, Leonard B",0,3,6,4,4,2,3,4,1,5,3,0,1,2,2.5269999999999997,38,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Algorithms and Models of Comp,2015,Fall,"Chekuri, Chandra S",13,51,47,35,38,39,39,38,20,12,10,13,3,0,2.7880000000000003,358,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Algorithms and Models of Comp,2015,Spring,"Pitt, Leonard B",21,33,24,43,39,30,35,27,32,24,20,8,5,2,2.612,343,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Algorithms and Models of Comp,2016,Spring,"Viswanathan, Mahesh",19,37,67,14,39,80,19,35,13,34,10,0,0,2,2.8289999999999997,369,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Algorithms for Big Data,2019,Spring,"Chekuri, Chandra S",1,27,13,4,0,2,3,0,0,0,0,0,0,0,3.707,50,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Applied Machine Learning,2016,Spring,"Forsyth, David A",6,79,54,16,5,0,0,0,0,0,0,0,3,1,3.721,164,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Applied Machine Learning,2017,Spring,"Forsyth, David A",11,67,66,62,3,0,0,3,0,0,0,0,0,0,3.659,212,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Applied Machine Learning,2018,Fall,"Forsyth, David A",3,73,23,5,7,0,0,3,0,0,0,0,5,0,3.6310000000000002,119,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Applied Machine Learning,2018,Fall,"Walker, Trevor A",1,53,31,4,4,0,0,0,0,0,0,0,3,2,3.699,98,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Applied Machine Learning,2018,Spring,"Forsyth, David A",0,363,14,21,6,0,0,2,0,0,2,0,6,1,3.858,415,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Applied Machine Learning,2019,Spring,"Walker, Trevor A",6,359,16,7,6,3,1,1,3,1,0,1,7,2,3.843,413,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Art and Science of Web Prog,2015,Spring,"Kumar, Ranjitha",7,18,8,18,13,6,11,2,1,0,1,0,0,1,3.2539999999999996,86,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Art and Science of Web Prog,2016,Spring,"Kumar, Ranjitha",3,20,16,10,13,11,16,1,1,0,2,0,0,1,3.176,94,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Art and Science of Web Prog,2019,Spring,"Kumar, Ranjitha",7,37,33,41,17,11,10,5,6,4,0,0,3,1,3.234,175,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Art and Science of Web Progrm,2013,Spring,"King, Samuel T",0,22,6,1,3,1,0,0,3,0,0,0,0,0,3.612,36,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Audio Computing Lab,2018,Spring,"Smaragdis, Paris",9,24,4,1,0,3,0,0,0,0,0,0,1,1,3.762,43,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Audio Computing Lab,2019,Spring,"Smaragdis, Paris",19,21,10,6,2,1,0,0,0,0,0,0,0,0,3.819,59,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Cloud Computing,2013,Spring,"Campbell, R H",6,27,9,12,7,12,7,4,2,0,1,0,0,0,3.295,87,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Cloud Computing,2014,Spring,"Campbell, R H",19,30,20,10,10,2,0,0,0,0,0,0,0,0,3.715,91,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Cloud Computing Applications,2017,Spring,"Campbell, R H",18,19,10,3,1,0,0,0,0,0,0,0,0,0,3.8760000000000003,51,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Cloud Computing Applications,2018,Spring,"Farivar, Reza",24,83,28,4,1,1,1,0,0,0,0,0,0,1,3.888,143,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Cloud Computing Applications,2019,Spring,"Farivar, Reza",103,93,36,17,7,0,0,4,0,0,2,0,4,0,3.773,266,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Cloud Networking,2018,Fall,"Godfrey, Philip B",8,8,3,3,2,0,0,2,0,0,0,0,4,0,3.167,30,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Computational Advertising,2018,Fall,"Sundaram, Hari",7,17,24,7,4,1,0,0,0,0,1,0,0,0,3.657,61,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Computational Photography,2013,Fall,"Hoiem, Derek W",4,7,9,2,2,0,0,0,1,0,0,0,0,0,3.654,25,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Computational Photography,2014,Fall,"Hoiem, Derek W",12,6,3,2,1,3,0,0,0,0,0,1,0,2,3.62,30,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Cyber Dystopia,2018,Fall,"Gunter, Carl",6,22,1,0,1,0,0,1,0,0,0,0,0,0,3.8930000000000002,31,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Data Science & Analytics,2019,Spring,"Campbell, R H",1,1,4,4,3,6,1,3,0,0,2,0,2,1,2.6430000000000002,28,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Digital Forensics,2013,Fall,"Campbell, R H",0,21,0,0,1,0,0,0,0,0,0,0,1,0,3.783,23,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Digital Forensics,2014,Fall,"Campbell, R H",3,8,9,2,6,2,1,0,0,0,0,0,0,0,3.528,31,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Digital Forensics,2015,Fall,"Campbell, R H",2,5,12,12,2,1,0,0,0,0,0,0,0,0,3.549,34,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Digital Forensics,2016,Fall,"Campbell, R H",0,12,6,1,8,0,1,0,0,0,0,0,0,0,3.56,28,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Digital Forensics,2017,Fall,"Campbell, R H",0,29,1,1,4,0,0,0,0,0,0,0,1,0,3.75,36,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Digital Forensics,2018,Fall,"Campbell, R H",0,37,0,0,1,0,0,0,0,0,0,0,0,0,3.9739999999999998,38,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Experimental Methods for HCI,2018,Fall,"Kirlik, Alex",4,6,3,3,8,2,0,1,0,0,1,0,0,0,3.3339999999999996,28,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Internet of Things,2019,Spring,"Caesar, Matthew C",11,28,3,0,2,0,0,0,0,0,0,0,0,0,3.932,44,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Intro to Data Science,2016,Fall,"Stodden, Victoria",11,9,15,3,0,0,0,0,0,0,0,0,0,0,3.8169999999999997,38,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Intro to Parallel Programming,2013,Spring,"Padua, David A",0,6,0,4,7,0,2,7,1,0,1,2,0,0,2.7,30,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Introduction to Deep Learning,2018,Fall,"Lazebnik, Svetlana",49,10,2,1,12,0,0,10,2,0,3,1,0,0,3.4410000000000003,90,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Learning and Computer Science,2018,Spring,"Herman, Geoffrey L",2,7,1,1,6,0,0,2,0,0,1,0,1,0,3.1430000000000002,21,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Mobile Interaction Design,2016,Spring,"Bailey, Brian P",3,17,11,5,6,1,0,0,1,0,0,0,0,0,3.622,44,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Probability in CS,2015,Fall,"Forsyth, David A",1,26,7,17,17,7,1,1,2,0,1,0,3,0,3.237,83,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Probability in CS,2015,Spring,"Forsyth, David A",2,16,8,8,10,10,1,2,0,0,1,0,6,0,3.0,64,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Probability in CS,2016,Spring,"Smaragdis, Paris",14,15,13,7,1,1,2,2,2,2,0,0,0,1,3.514,60,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Probability in Computer Sci,2012,Fall,"Forsyth, David A",0,4,7,6,2,2,2,1,0,0,0,0,1,0,3.187,25,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Probability in Computer Sci,2013,Fall,"Forsyth, David A",3,9,4,6,6,8,4,1,2,0,2,0,4,0,2.83,49,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Probability in Computer Sci,2014,Fall,"Forsyth, David A",10,11,11,13,11,8,8,0,1,0,0,0,3,2,3.1889999999999996,78,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Social & Information Networks,2016,Fall,"Sundaram, Hari",5,26,9,3,3,6,3,3,2,0,0,0,0,0,3.4730000000000003,60,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Socio-Computer Interaction,2013,Fall,"Fu, Wai-Tat",0,8,6,5,7,9,1,0,0,0,1,0,0,0,3.217,37,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Software Testing,2015,Spring,"Marinov, Darko",6,4,3,3,4,5,1,0,0,0,0,0,0,0,3.411,26,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Software Testing,2016,Spring,"Marinov, Darko",9,3,3,4,5,3,0,0,0,0,0,0,0,0,3.531,27,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Special Topics,2011,Fall,"Fu, Wai-Tat",2,10,1,3,8,1,0,1,0,0,1,0,0,0,3.383,27,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Special Topics,2011,Fall,"Hoiem, Derek W",6,8,4,1,2,0,0,1,0,0,0,0,0,0,3.728,22,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Special Topics,2011,Spring,"Garnett, Guy E",2,11,13,5,3,1,0,0,0,0,0,0,0,0,3.658,35,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,The Art of Web Programming,2016,Fall,"Kumar, Ranjitha",4,22,11,19,13,9,8,1,6,1,1,0,0,1,3.196,96,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,The Art of Web Programming,2017,Fall,"Kumar, Ranjitha",5,37,29,27,28,19,5,7,7,0,1,0,0,0,3.2569999999999997,165,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Theory II,2015,Fall,"Har-Peled, Sariel",0,5,5,4,4,2,2,3,0,0,0,0,0,0,3.187,25,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Theory II,2015,Spring,"Erickson, Jeff G",4,11,5,8,7,3,3,0,2,0,0,0,0,1,3.3569999999999998,44,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Theory II,2016,Fall,"Chekuri, Chandra S",2,7,8,7,11,10,2,1,0,1,1,0,1,0,3.085,51,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Theory II,2016,Spring,"Erickson, Jeff G",5,18,15,14,15,11,12,5,3,2,0,1,1,0,3.082,102,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Theory II,2017,Fall,"Chan, Timothy M",5,5,7,6,7,6,4,3,4,0,0,0,0,0,3.0789999999999997,47,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Theory II,2017,Spring,"Erickson, Jeff G",3,13,18,14,13,10,11,10,4,2,1,0,5,2,2.8689999999999998,106,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Using Tech to Solve Adv Probs,2014,Spring,"Clifton, Rhiannon L",0,11,5,2,3,0,1,0,0,0,0,0,0,0,3.6519999999999997,22,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Virtual Reality,2015,Fall,"Yershova, Ganna",5,46,19,16,7,3,0,0,0,0,0,0,0,0,3.7089999999999996,96,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Virtual Reality,2015,Spring,"Lavalle, Steven M",11,41,28,7,5,1,0,0,1,0,0,0,0,0,3.76,94,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Virtual Reality,2016,Fall,"Yershova, Ganna",0,81,49,31,12,1,1,0,0,0,0,0,0,0,3.7030000000000003,175,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Virtual Reality,2016,Spring,"Lavalle, Steven M",10,26,22,9,19,6,0,4,0,0,0,0,0,0,3.497,96,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Virtual Reality,2017,Fall,"Yershova, Ganna",28,114,12,2,2,0,0,0,0,0,0,0,0,1,3.9539999999999997,159,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Virtual Reality,2017,Spring,"Lavalle, Steven M",17,53,30,17,53,8,0,5,0,0,0,0,1,0,3.4619999999999997,184,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Virtual Reality,2018,Fall,"Shaffer, Eric G",0,49,36,21,38,11,2,8,0,0,2,0,1,0,3.358,168,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Virtual Reality,2018,Spring,"Angrave, Lawrence C",49,31,17,27,18,7,6,1,1,0,0,0,0,0,3.5839999999999996,157,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,498,Virtual Reality,2019,Spring,"Shaffer, Eric G",1,30,41,27,20,10,6,1,1,0,1,0,0,0,3.404,138,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,510,Advanced Information Retrieval,2017,Fall,"Zhai, Chengxiang",16,40,15,8,8,0,0,0,0,0,0,0,0,0,3.79,87,"Advanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval. "
CS,510,Advanced Information Retrieval,2018,Fall,"Zhai, Chengxiang",17,44,11,5,2,3,0,0,0,0,0,0,0,1,3.842,83,"Advanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval. "
CS,511,Advanced Data Management,2014,Spring,"Chang, Kevin C",7,13,18,2,3,2,1,0,1,0,0,0,0,0,3.64,47,"Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. "
CS,511,Advanced Data Management,2016,Spring,"Chang, Kevin C",4,15,10,3,5,2,1,0,0,0,0,0,0,0,3.634,40,"Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. "
CS,511,Advanced Data Management,2017,Spring,"Chang, Kevin C",1,8,17,4,1,2,0,0,0,0,0,0,1,0,3.531,34,"Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. "
CS,512,Data Mining Principles,2013,Spring,"Han, Jiawei",10,34,20,6,2,1,3,0,0,0,0,0,1,0,3.702,77,"An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. "
CS,512,Data Mining Principles,2014,Spring,"Han, Jiawei",10,34,11,5,5,1,1,3,1,0,0,0,0,0,3.6719999999999997,71,"An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. "
CS,512,Data Mining Principles,2015,Spring,"Han, Jiawei",10,31,19,0,3,1,0,1,0,0,0,0,0,1,3.806,66,"An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. "
CS,512,Data Mining Principles,2016,Spring,"Han, Jiawei",10,39,6,5,2,0,0,0,0,0,1,0,0,0,3.8360000000000003,63,"An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. "
CS,512,Data Mining Principles,2017,Spring,"Han, Jiawei",9,32,17,3,1,1,1,0,1,0,0,0,0,0,3.785,65,"An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. "
CS,512,Data Mining Principles,2018,Spring,"Han, Jiawei",9,24,16,8,8,5,3,1,1,0,0,0,1,0,3.492,76,"An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. "
CS,512,Data Mining Principles,2019,Spring,"Han, Jiawei",12,22,22,4,6,0,0,1,0,0,1,0,0,0,3.6919999999999997,68,"An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. "
CS,519,Scientific Visualization,2015,Fall,"Shaffer, Eric G",2,21,4,2,2,0,0,0,0,0,0,0,0,0,3.85,31,"Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. "
CS,519,Scientific Visualization,2015,Spring,"Shaffer, Eric G",0,15,5,3,1,0,0,0,0,0,0,0,1,1,3.654,26,"Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. "
CS,519,Scientific Visualization,2016,Fall,"Shaffer, Eric G",0,13,9,7,1,0,0,1,0,0,0,0,1,1,3.542,33,"Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. "
CS,519,Scientific Visualization,2017,Fall,"Shaffer, Eric G",7,17,6,4,6,0,0,0,0,0,0,0,0,0,3.734,40,"Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. "
CS,523,Advanced Operating Systems,2013,Fall,"Campbell, R H",0,8,17,6,0,0,0,0,0,0,0,0,1,0,3.574,32,"Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. "
CS,523,Advanced Operating Systems,2017,Fall,"Campbell, R H",11,10,5,5,1,0,0,0,0,0,0,0,0,0,3.812,32,"Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. "
CS,525,Advanced Distributed Systems,2011,Spring,"Gupta, Indranil",3,8,11,5,0,1,0,0,0,0,0,0,0,0,3.7030000000000003,28,"Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. "
CS,525,Advanced Distributed Systems,2013,Spring,"Gupta, Indranil",5,7,12,2,0,0,0,0,0,0,0,0,0,0,3.7960000000000003,26,"Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. "
CS,525,Advanced Distributed Systems,2014,Spring,"Gupta, Indranil",11,18,16,6,1,0,0,0,0,0,0,0,0,0,3.802,52,"Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. "
CS,525,Advanced Distributed Systems,2015,Spring,"Gupta, Indranil",3,17,40,4,0,0,0,0,0,0,0,0,0,0,3.752,64,"Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. "
CS,525,Advanced Distributed Systems,2016,Spring,"Gupta, Indranil",8,13,24,26,1,0,0,0,0,0,0,0,0,0,3.634,72,"Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. "
CS,525,Advanced Distributed Systems,2017,Spring,"Gupta, Indranil",7,13,13,14,3,0,0,0,0,0,0,0,0,0,3.667,50,"Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. "
CS,525,Advanced Distributed Systems,2018,Spring,"Gupta, Indranil",8,9,33,5,1,0,0,0,0,0,0,0,0,0,3.728,56,"Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. "
CS,527,Adv Topics in Software Eng,2010,Fall,"Marinov, Darko",6,9,8,3,0,0,0,0,0,0,0,0,0,0,3.821,26,"Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. "
CS,527,Topics in Software Engineering,2013,Fall,"Xie, Tao",15,17,3,2,2,2,0,0,0,0,0,0,0,0,3.83,41,"Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. "
CS,527,Topics in Software Engineering,2014,Fall,"Marinov, Darko",6,5,6,11,4,2,0,0,0,0,0,0,0,1,3.529,35,"Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. "
CS,527,Topics in Software Engineering,2015,Fall,"Xie, Tao",6,11,8,1,3,1,0,0,0,0,0,0,0,1,3.745,31,"Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. "
CS,527,Topics in Software Engineering,2016,Fall,"Marinov, Darko",4,8,3,2,2,1,0,0,0,0,0,0,1,0,3.54,21,"Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. "
CS,527,Topics in Software Engineering,2017,Fall,"Marinov, Darko",4,11,5,3,0,0,0,0,0,0,0,0,0,0,3.841,23,"Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. "
CS,527,Topics in Software Engineering,2019,Spring,"Xie, Tao",12,5,2,3,0,1,0,0,0,0,0,0,0,0,3.826,23,"Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. "
CS,528,Obj-Oriented Progrmg & Design,2013,Spring,"Johnson, Ralph E",0,29,0,0,12,0,0,0,0,0,0,0,0,0,3.707,41,"Principles of object-oriented design; design patterns; use and design of frameworks; reflection, refractoring, use of unit tests as specifications. "
CS,533,Parallel Computer Architecture,2010,Spring,"Torrellas, Josep",3,19,0,3,5,0,0,0,0,0,0,0,0,0,3.766,30,Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. 
CS,533,Parallel Computer Architecture,2011,Spring,"Torrellas, Josep",6,12,6,4,5,0,0,2,0,0,0,0,0,0,3.61,35,Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. 
CS,533,Parallel Computer Architecture,2013,Spring,"Torrellas, Josep",6,9,3,0,8,0,0,0,0,0,0,0,0,0,3.654,26,Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. 
CS,533,Parallel Computer Architecture,2014,Spring,"Torrellas, Josep",6,10,0,3,4,0,0,0,0,0,0,0,0,0,3.739,23,Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. 
CS,533,Parallel Computer Architecture,2015,Spring,"Torrellas, Josep",4,6,1,2,6,1,0,1,0,0,0,0,0,0,3.4760000000000004,21,Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. 
CS,533,Parallel Computer Architecture,2016,Spring,"Torrellas, Josep",3,11,3,4,9,0,0,0,0,0,0,0,0,0,3.5780000000000003,30,Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. 
CS,533,Parallel Computer Architecture,2019,Spring,"Torrellas, Josep",2,14,0,2,4,0,0,0,0,0,0,0,1,0,3.594,23,Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. 
CS,538,Advanced Computer Networks,2013,Fall,"Godfrey, Philip B",3,36,3,1,0,1,0,0,0,0,0,0,0,0,3.932,44,"Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. "
CS,538,Advanced Computer Networks,2016,Spring,"Nahrstedt, Klara",0,15,2,4,0,0,0,0,0,0,0,0,0,0,3.841,21,"Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. "
CS,538,Advanced Computer Networks,2017,Spring,"Godfrey, Philip B",2,16,0,2,1,1,1,0,0,0,0,0,0,1,3.7680000000000002,24,"Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. "
CS,538,Advanced Computer Networks,2018,Spring,"Godfrey, Philip B",2,19,0,0,1,1,1,0,0,0,0,0,0,0,3.833,24,"Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. "
CS,538,Advanced Computer Networks,2019,Spring,"Godfrey, Philip B",1,26,4,3,1,1,1,0,1,0,0,0,0,0,3.7460000000000004,38,"Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. "
CS,544,Optimiz in Computer Vision,2014,Spring,"Forsyth, David A",0,29,0,2,0,0,0,0,0,0,0,0,0,0,3.957,31,
CS,546,Machine Learning in NLP,2011,Spring,"Roth, Dan",0,20,0,0,1,0,0,0,0,0,0,0,0,0,3.952,21,"Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. "
CS,546,Machine Learning in NLP,2014,Spring,"Hockenmaier, Julia C",0,13,7,2,2,1,1,0,0,0,0,0,0,0,3.667,26,"Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. "
CS,546,Machine Learning in NLP,2016,Spring,"Roth, Dan",2,18,5,7,5,2,0,0,0,0,0,0,0,0,3.641,39,"Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. "
CS,546,Machine Learning in NLP,2018,Spring,"Hockenmaier, Julia C",0,80,2,1,1,0,0,0,0,0,0,0,0,1,3.972,85,"Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. "
CS,548,Models of Cognitive Processes,2016,Fall,"Fu, Wai-Tat",1,18,3,2,2,0,0,0,0,0,0,0,0,0,3.833,26,"Formal models and concepts in automated cognition; integrating machine learning and prior knowledge; current approaches and detailed analyses of the role of reasoning in the learning process; computational complexity and fundamental tradeoffs between expressiveness and tractability; implications for state-of-the-art artificial intelligence areas such as automated planning, the semantic web, relational learning, structured prediction, latent models, structure learning, theory formation, etc.; philosophical and psychological aspects of integrating analytic and empirical evidence. "
CS,548,Models of Cognitive Processes,2017,Fall,"Fu, Wai-Tat",0,7,2,13,17,2,3,0,0,0,1,0,0,0,3.177,45,"Formal models and concepts in automated cognition; integrating machine learning and prior knowledge; current approaches and detailed analyses of the role of reasoning in the learning process; computational complexity and fundamental tradeoffs between expressiveness and tractability; implications for state-of-the-art artificial intelligence areas such as automated planning, the semantic web, relational learning, structured prediction, latent models, structure learning, theory formation, etc.; philosophical and psychological aspects of integrating analytic and empirical evidence. "
CS,548,Models of Cognitive Processes,2018,Fall,"Fu, Wai-Tat",0,10,0,0,12,1,0,2,0,0,0,0,0,0,3.307,25,"Formal models and concepts in automated cognition; integrating machine learning and prior knowledge; current approaches and detailed analyses of the role of reasoning in the learning process; computational complexity and fundamental tradeoffs between expressiveness and tractability; implications for state-of-the-art artificial intelligence areas such as automated planning, the semantic web, relational learning, structured prediction, latent models, structure learning, theory formation, etc.; philosophical and psychological aspects of integrating analytic and empirical evidence. "
CS,554,Parallel Numerical Algorithms,2010,Spring,"Heath, Michael T",4,2,6,7,1,2,0,0,0,0,0,0,0,0,3.53,22,"Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. "
CS,554,Parallel Numerical Algorithms,2011,Fall,"Heath, Michael T",4,8,7,2,0,0,0,0,0,0,0,0,0,1,3.826,22,"Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. "
CS,554,Parallel Numerical Algorithms,2013,Fall,"Heath, Michael T",3,6,12,5,2,3,0,0,0,0,0,0,0,0,3.571,31,"Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. "
CS,554,Parallel Numerical Algorithms,2015,Fall,"Heath, Michael T",3,6,4,8,1,4,0,0,0,0,0,0,0,0,3.5,26,"Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. "
CS,554,Parallel Numerical Algorithms,2017,Fall,"Solomonik, Edgar V",1,9,9,3,0,0,0,0,0,0,0,0,0,0,3.7739999999999996,22,"Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. "
CS,555,Numerical Methods for PDEs,2010,Spring,"Hirani, Anil N",2,8,9,6,1,2,0,0,0,0,0,0,0,0,3.62,28,"Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. "
CS,555,Numerical Methods for PDEs,2013,Spring,"Olson, Luke",0,21,3,6,1,5,0,1,0,0,0,0,0,0,3.6039999999999996,37,"Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. "
CS,555,Numerical Methods for PDEs,2014,Spring,"Olson, Luke",1,22,4,3,0,0,0,0,1,0,0,0,0,1,3.8169999999999997,32,"Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. "
CS,555,Numerical Methods for PDEs,2015,Spring,"Olson, Luke",0,21,3,0,1,3,0,0,0,0,0,0,1,0,3.656,29,"Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. "
CS,555,Numerical Methods for PDEs,2016,Spring,"Olson, Luke",0,21,3,0,2,0,0,0,0,0,0,0,0,0,3.885,26,"Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. "
CS,555,Numerical Methods for PDEs,2017,Spring,"Olson, Luke",0,28,2,1,0,0,0,0,0,0,0,0,0,0,3.957,31,"Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. "
CS,555,Numerical Methods for PDEs,2018,Spring,"Fischer, Paul",2,16,6,1,0,0,0,0,0,0,0,0,0,0,3.8939999999999997,25,"Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. "
CS,555,Numerical Methods for PDEs,2019,Spring,"Fischer, Paul",8,11,4,0,2,0,0,0,0,0,0,0,0,1,3.867,26,"Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. "
CS,556,Iterative & Multigrid Methods,2014,Fall,"Olson, Luke",0,15,5,2,1,2,0,0,1,0,1,0,0,0,3.556,27,
CS,563,Advanced Computer Security,2016,Fall,"Gunter, Carl",0,24,0,0,1,0,0,1,0,0,0,0,0,1,3.885,27,
CS,563,Advanced Computer Security,2018,Fall,"Bates, Adam M",1,12,11,3,0,1,0,0,1,0,0,0,0,0,3.679,29,
CS,565,Human-Computer Interaction,2013,Spring,"Bailey, Brian P",1,7,10,4,7,0,0,3,0,0,0,0,1,0,3.304,33,"In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. "
CS,565,Human-Computer Interaction,2014,Spring,"Bailey, Brian P",0,21,3,0,0,0,0,1,0,0,0,0,0,0,3.88,25,"In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. "
CS,565,Human-Computer Interaction,2015,Fall,"Bailey, Brian P",3,9,9,3,0,1,0,0,0,0,0,0,0,0,3.748,25,"In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. "
CS,565,Human-Computer Interaction,2017,Spring,"Bailey, Brian P",0,20,3,4,2,1,0,0,0,0,0,0,0,0,3.767,30,"In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. "
CS,573,Algorithms,2010,Fall,"Erickson, Jeff G",4,15,9,12,8,4,1,0,0,0,0,0,0,1,3.509,54,"NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. "
CS,573,Algorithms,2011,Fall,"Chekuri, Chandra S",2,10,10,8,4,3,0,0,0,0,0,0,0,1,3.55,38,"NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. "
CS,573,Algorithms,2012,Fall,"Har-Peled, Sariel",0,6,8,8,4,2,0,0,0,0,0,0,0,0,3.4760000000000004,28,"NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. "
CS,573,Algorithms,2013,Fall,"Har-Peled, Sariel",0,8,8,7,5,3,0,0,0,0,0,0,0,0,3.4739999999999998,31,"NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. "
CS,574,Randomized Algorithms,2014,Spring,"Har-Peled, Sariel",0,3,10,3,5,2,0,0,0,0,0,0,0,1,3.4360000000000004,24,
CS,579,Computational Complexity,2019,Spring,"Forbes, Michael A",2,11,6,3,1,3,0,0,0,0,0,0,0,0,3.655,26,"Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. "
CS,583,Approximation Algorithms,2018,Spring,"Chekuri, Chandra S",0,23,4,0,1,0,0,0,0,0,0,0,0,0,3.917,28,
CS,598,Adv Social&Information Network,2017,Fall,"Sundaram, Hari",12,7,2,3,0,0,0,0,0,0,0,0,0,0,3.889,24,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Advanced Bayesian Modeling,2017,Fall,"Park, Trevor H",8,20,5,9,5,2,0,1,0,0,0,0,0,0,3.653,50,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Advanced Bayesian Modeling,2018,Fall,"Park, Trevor H",14,30,6,16,9,3,1,1,3,0,0,0,2,2,3.478,87,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Advanced Data Structures,2015,Fall,"Erickson, Jeff G",0,14,9,6,0,0,0,0,0,0,0,0,0,0,3.759,29,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Advanced Information Retrieval,2012,Fall,"Zhai, Chengxiang",8,22,8,0,2,0,0,0,0,0,0,0,0,0,3.884,40,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Advanced Information Retrieval,2013,Fall,"Zhai, Chengxiang",5,37,4,3,0,0,0,0,0,0,0,0,0,0,3.932,49,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Advanced Information Retrieval,2014,Fall,"Zhai, Chengxiang",6,23,3,2,0,0,0,0,0,0,0,0,0,0,3.931,34,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Advanced Information Retrieval,2016,Fall,"Zhai, Chengxiang",6,17,9,4,3,1,0,0,0,0,0,0,0,0,3.75,40,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Adversarial Machine Learning,2018,Fall,"Li, Bo",1,20,7,1,0,0,0,0,0,0,0,0,0,1,3.897,30,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Autonomous Vehicles for AI,2017,Spring,"Forsyth, David A",0,26,0,0,0,0,0,1,0,0,0,0,0,0,3.926,27,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Cutting-Edge Trends In DLR,2017,Spring,"Lazebnik, Svetlana",12,27,11,6,3,0,0,0,0,0,0,0,0,0,3.819,59,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Data-Driven Design,2014,Fall,"Kumar, Ranjitha",2,10,2,6,1,1,0,0,0,0,0,0,0,0,3.681,22,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Data-Driven Design,2015,Fall,"Kumar, Ranjitha",2,8,5,4,2,0,0,0,0,0,0,0,0,0,3.699,21,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Deep Learning,2018,Fall,"Sirignano, Justin A",12,17,7,1,2,0,0,0,0,0,0,0,0,0,3.872,39,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Foundations of Data Curation,2018,Fall,"Renear, Allen H",75,28,5,2,2,0,0,0,0,0,0,0,0,0,3.955,112,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Graphical Models,2016,Fall,"Koyejo, Oluwasanmi O",3,19,1,0,0,0,0,0,0,0,1,0,0,1,3.861,25,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,HCI for ML,2018,Fall,"Kumar, Ranjitha",0,24,11,2,1,0,0,0,0,0,0,0,0,1,3.843,39,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Improving Your Research Skills,2015,Spring,"Sha, Lui R",9,12,4,3,0,0,0,0,0,0,0,0,0,0,3.8810000000000002,28,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Lang/Abst f High-Perf Sci Comp,2018,Fall,"Kloeckner, Andreas P",0,19,1,1,0,0,0,0,0,0,0,0,0,0,3.952,21,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Mach Lrng for Signal Processng,2012,Fall,"Smaragdis, Paris",7,20,4,1,0,0,0,0,0,0,0,0,0,0,3.938,32,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Mach Lrng for Signal Processng,2013,Fall,"Smaragdis, Paris",4,47,3,5,1,0,0,0,0,0,0,0,0,0,3.911,60,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Mach Lrng for Signal Processng,2014,Fall,"Smaragdis, Paris",12,23,16,0,2,5,1,0,0,0,0,0,1,0,3.673,60,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Mach Lrng for Signal Processng,2017,Fall,"Smaragdis, Paris",17,32,19,2,0,1,0,1,0,0,0,0,2,1,3.7439999999999998,75,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Mach Lrng for Signal Processng,2018,Fall,"Smaragdis, Paris",14,43,11,0,13,2,0,0,1,0,0,0,0,0,3.7430000000000003,84,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Machine Learning Theory,2017,Fall,"Telgarsky, Matus J",2,13,5,0,2,0,0,0,0,0,0,0,0,0,3.8339999999999996,22,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Machine Lrning Computation Bio,2015,Fall,"Peng, Jian",5,13,2,1,0,0,0,0,0,0,0,0,0,0,3.937,21,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Machine Lrning Computation Bio,2018,Fall,"Peng, Jian",1,15,6,0,3,0,0,0,0,0,0,0,0,0,3.801,25,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Parallel Programming,2014,Fall,"Kale, Laxmikant V",1,11,4,2,3,2,0,0,0,0,0,0,0,0,3.638,23,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Practical Statistical Learning,2018,Fall,"Liang, Feng",1,90,13,7,3,0,0,2,0,0,0,0,2,0,3.7969999999999997,118,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Realiablity of Cloud-Scale Sys,2018,Fall,"Xu, Tianyin",3,13,9,5,1,0,0,0,0,0,0,0,0,0,3.764,31,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Secure Processor Design,2017,Fall,"Fletcher, Christopher W",3,19,2,1,0,0,0,0,0,0,0,0,0,0,3.947,25,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Social Sensing,2017,Spring,"Abdelzaher, Tarek",7,11,4,2,0,0,0,0,0,0,0,0,0,0,3.889,24,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Social Spaces on the Internet,2018,Fall,"Karahalios, Kyratso G",12,11,4,1,0,0,0,0,0,0,0,0,0,0,3.929,28,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Special Topics,2010,Spring,"Hockenmaier, Julia C",0,17,4,1,0,0,0,0,0,0,0,0,0,0,3.91,22,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Special Topics,2011,Fall,"Rutenbar, Robin A",3,8,5,2,6,5,0,0,0,0,0,0,0,0,3.4610000000000003,29,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Special Topics,2014,Spring,"Adve, Sarita V",14,3,1,0,2,1,0,0,0,0,0,0,0,0,3.826,21,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Stat Reinforcement lrng,2019,Spring,"Jiang, Nan",8,10,3,1,1,0,0,0,0,0,0,0,0,0,3.884,23,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Statistical Reinforcement,2018,Fall,"Jiang, Nan",4,8,5,1,0,0,1,2,0,0,0,0,0,0,3.62,21,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
CS,598,Topic in Algorithms,2015,Spring,"Blum, Avrim L",3,8,7,1,5,0,0,0,0,0,0,0,0,0,3.667,24,Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
